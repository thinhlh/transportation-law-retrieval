/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 11519.0, "series": [{"data": [[0.0, 6.0], [0.1, 9.0], [0.2, 12.0], [0.3, 16.0], [0.4, 21.0], [0.5, 25.0], [0.6, 28.0], [0.7, 30.0], [0.8, 31.0], [0.9, 33.0], [1.0, 34.0], [1.1, 37.0], [1.2, 41.0], [1.3, 42.0], [1.4, 45.0], [1.5, 51.0], [1.6, 56.0], [1.7, 65.0], [1.8, 66.0], [1.9, 67.0], [2.0, 68.0], [2.1, 69.0], [2.2, 69.0], [2.3, 70.0], [2.4, 71.0], [2.5, 71.0], [2.6, 73.0], [2.7, 73.0], [2.8, 74.0], [2.9, 76.0], [3.0, 78.0], [3.1, 78.0], [3.2, 83.0], [3.3, 86.0], [3.4, 86.0], [3.5, 87.0], [3.6, 88.0], [3.7, 89.0], [3.8, 89.0], [3.9, 89.0], [4.0, 90.0], [4.1, 91.0], [4.2, 92.0], [4.3, 92.0], [4.4, 93.0], [4.5, 94.0], [4.6, 95.0], [4.7, 98.0], [4.8, 98.0], [4.9, 98.0], [5.0, 99.0], [5.1, 100.0], [5.2, 103.0], [5.3, 103.0], [5.4, 106.0], [5.5, 107.0], [5.6, 109.0], [5.7, 110.0], [5.8, 111.0], [5.9, 113.0], [6.0, 114.0], [6.1, 117.0], [6.2, 121.0], [6.3, 123.0], [6.4, 126.0], [6.5, 126.0], [6.6, 131.0], [6.7, 132.0], [6.8, 132.0], [6.9, 134.0], [7.0, 134.0], [7.1, 135.0], [7.2, 135.0], [7.3, 137.0], [7.4, 140.0], [7.5, 142.0], [7.6, 144.0], [7.7, 145.0], [7.8, 145.0], [7.9, 147.0], [8.0, 148.0], [8.1, 151.0], [8.2, 154.0], [8.3, 161.0], [8.4, 162.0], [8.5, 163.0], [8.6, 164.0], [8.7, 164.0], [8.8, 164.0], [8.9, 164.0], [9.0, 166.0], [9.1, 167.0], [9.2, 168.0], [9.3, 170.0], [9.4, 171.0], [9.5, 173.0], [9.6, 178.0], [9.7, 199.0], [9.8, 201.0], [9.9, 204.0], [10.0, 210.0], [10.1, 211.0], [10.2, 212.0], [10.3, 214.0], [10.4, 222.0], [10.5, 225.0], [10.6, 225.0], [10.7, 231.0], [10.8, 237.0], [10.9, 239.0], [11.0, 240.0], [11.1, 241.0], [11.2, 241.0], [11.3, 242.0], [11.4, 243.0], [11.5, 250.0], [11.6, 251.0], [11.7, 252.0], [11.8, 252.0], [11.9, 252.0], [12.0, 253.0], [12.1, 253.0], [12.2, 253.0], [12.3, 254.0], [12.4, 254.0], [12.5, 254.0], [12.6, 255.0], [12.7, 255.0], [12.8, 256.0], [12.9, 256.0], [13.0, 257.0], [13.1, 257.0], [13.2, 259.0], [13.3, 264.0], [13.4, 266.0], [13.5, 267.0], [13.6, 268.0], [13.7, 269.0], [13.8, 270.0], [13.9, 274.0], [14.0, 276.0], [14.1, 277.0], [14.2, 277.0], [14.3, 277.0], [14.4, 278.0], [14.5, 280.0], [14.6, 280.0], [14.7, 280.0], [14.8, 281.0], [14.9, 281.0], [15.0, 281.0], [15.1, 281.0], [15.2, 282.0], [15.3, 282.0], [15.4, 282.0], [15.5, 282.0], [15.6, 283.0], [15.7, 283.0], [15.8, 284.0], [15.9, 284.0], [16.0, 284.0], [16.1, 285.0], [16.2, 285.0], [16.3, 285.0], [16.4, 285.0], [16.5, 286.0], [16.6, 286.0], [16.7, 286.0], [16.8, 286.0], [16.9, 287.0], [17.0, 287.0], [17.1, 287.0], [17.2, 287.0], [17.3, 288.0], [17.4, 288.0], [17.5, 288.0], [17.6, 288.0], [17.7, 289.0], [17.8, 289.0], [17.9, 289.0], [18.0, 289.0], [18.1, 289.0], [18.2, 289.0], [18.3, 289.0], [18.4, 290.0], [18.5, 290.0], [18.6, 290.0], [18.7, 290.0], [18.8, 290.0], [18.9, 291.0], [19.0, 291.0], [19.1, 291.0], [19.2, 291.0], [19.3, 291.0], [19.4, 292.0], [19.5, 292.0], [19.6, 292.0], [19.7, 293.0], [19.8, 293.0], [19.9, 293.0], [20.0, 294.0], [20.1, 294.0], [20.2, 295.0], [20.3, 295.0], [20.4, 295.0], [20.5, 295.0], [20.6, 296.0], [20.7, 296.0], [20.8, 297.0], [20.9, 297.0], [21.0, 298.0], [21.1, 298.0], [21.2, 299.0], [21.3, 299.0], [21.4, 299.0], [21.5, 299.0], [21.6, 300.0], [21.7, 300.0], [21.8, 300.0], [21.9, 301.0], [22.0, 301.0], [22.1, 302.0], [22.2, 302.0], [22.3, 303.0], [22.4, 305.0], [22.5, 309.0], [22.6, 309.0], [22.7, 311.0], [22.8, 312.0], [22.9, 314.0], [23.0, 315.0], [23.1, 317.0], [23.2, 317.0], [23.3, 319.0], [23.4, 320.0], [23.5, 321.0], [23.6, 322.0], [23.7, 325.0], [23.8, 332.0], [23.9, 335.0], [24.0, 346.0], [24.1, 348.0], [24.2, 354.0], [24.3, 363.0], [24.4, 364.0], [24.5, 365.0], [24.6, 365.0], [24.7, 366.0], [24.8, 366.0], [24.9, 367.0], [25.0, 369.0], [25.1, 374.0], [25.2, 375.0], [25.3, 377.0], [25.4, 378.0], [25.5, 379.0], [25.6, 380.0], [25.7, 380.0], [25.8, 380.0], [25.9, 381.0], [26.0, 382.0], [26.1, 383.0], [26.2, 383.0], [26.3, 384.0], [26.4, 385.0], [26.5, 385.0], [26.6, 386.0], [26.7, 386.0], [26.8, 386.0], [26.9, 387.0], [27.0, 387.0], [27.1, 389.0], [27.2, 389.0], [27.3, 390.0], [27.4, 392.0], [27.5, 393.0], [27.6, 393.0], [27.7, 394.0], [27.8, 395.0], [27.9, 398.0], [28.0, 398.0], [28.1, 399.0], [28.2, 399.0], [28.3, 400.0], [28.4, 402.0], [28.5, 404.0], [28.6, 405.0], [28.7, 406.0], [28.8, 408.0], [28.9, 410.0], [29.0, 410.0], [29.1, 411.0], [29.2, 411.0], [29.3, 412.0], [29.4, 412.0], [29.5, 413.0], [29.6, 413.0], [29.7, 413.0], [29.8, 414.0], [29.9, 414.0], [30.0, 414.0], [30.1, 416.0], [30.2, 417.0], [30.3, 417.0], [30.4, 418.0], [30.5, 419.0], [30.6, 420.0], [30.7, 420.0], [30.8, 420.0], [30.9, 421.0], [31.0, 421.0], [31.1, 422.0], [31.2, 424.0], [31.3, 427.0], [31.4, 428.0], [31.5, 429.0], [31.6, 431.0], [31.7, 432.0], [31.8, 432.0], [31.9, 433.0], [32.0, 434.0], [32.1, 434.0], [32.2, 435.0], [32.3, 435.0], [32.4, 437.0], [32.5, 438.0], [32.6, 438.0], [32.7, 438.0], [32.8, 439.0], [32.9, 439.0], [33.0, 439.0], [33.1, 440.0], [33.2, 442.0], [33.3, 443.0], [33.4, 443.0], [33.5, 444.0], [33.6, 444.0], [33.7, 445.0], [33.8, 445.0], [33.9, 445.0], [34.0, 446.0], [34.1, 447.0], [34.2, 447.0], [34.3, 447.0], [34.4, 447.0], [34.5, 447.0], [34.6, 447.0], [34.7, 448.0], [34.8, 448.0], [34.9, 449.0], [35.0, 449.0], [35.1, 449.0], [35.2, 450.0], [35.3, 450.0], [35.4, 450.0], [35.5, 450.0], [35.6, 451.0], [35.7, 452.0], [35.8, 452.0], [35.9, 453.0], [36.0, 453.0], [36.1, 454.0], [36.2, 454.0], [36.3, 455.0], [36.4, 455.0], [36.5, 456.0], [36.6, 456.0], [36.7, 457.0], [36.8, 457.0], [36.9, 458.0], [37.0, 458.0], [37.1, 459.0], [37.2, 459.0], [37.3, 460.0], [37.4, 461.0], [37.5, 461.0], [37.6, 462.0], [37.7, 462.0], [37.8, 463.0], [37.9, 463.0], [38.0, 464.0], [38.1, 464.0], [38.2, 465.0], [38.3, 466.0], [38.4, 467.0], [38.5, 468.0], [38.6, 468.0], [38.7, 469.0], [38.8, 471.0], [38.9, 471.0], [39.0, 471.0], [39.1, 472.0], [39.2, 472.0], [39.3, 473.0], [39.4, 473.0], [39.5, 474.0], [39.6, 475.0], [39.7, 475.0], [39.8, 475.0], [39.9, 476.0], [40.0, 478.0], [40.1, 480.0], [40.2, 481.0], [40.3, 483.0], [40.4, 483.0], [40.5, 484.0], [40.6, 484.0], [40.7, 485.0], [40.8, 485.0], [40.9, 486.0], [41.0, 486.0], [41.1, 486.0], [41.2, 487.0], [41.3, 488.0], [41.4, 488.0], [41.5, 488.0], [41.6, 489.0], [41.7, 489.0], [41.8, 489.0], [41.9, 491.0], [42.0, 493.0], [42.1, 495.0], [42.2, 496.0], [42.3, 497.0], [42.4, 497.0], [42.5, 498.0], [42.6, 498.0], [42.7, 499.0], [42.8, 500.0], [42.9, 503.0], [43.0, 504.0], [43.1, 505.0], [43.2, 505.0], [43.3, 506.0], [43.4, 506.0], [43.5, 506.0], [43.6, 507.0], [43.7, 507.0], [43.8, 507.0], [43.9, 508.0], [44.0, 508.0], [44.1, 509.0], [44.2, 509.0], [44.3, 510.0], [44.4, 510.0], [44.5, 511.0], [44.6, 511.0], [44.7, 511.0], [44.8, 512.0], [44.9, 512.0], [45.0, 512.0], [45.1, 513.0], [45.2, 513.0], [45.3, 513.0], [45.4, 514.0], [45.5, 514.0], [45.6, 515.0], [45.7, 515.0], [45.8, 515.0], [45.9, 516.0], [46.0, 516.0], [46.1, 517.0], [46.2, 518.0], [46.3, 518.0], [46.4, 518.0], [46.5, 520.0], [46.6, 520.0], [46.7, 522.0], [46.8, 523.0], [46.9, 523.0], [47.0, 524.0], [47.1, 525.0], [47.2, 526.0], [47.3, 526.0], [47.4, 526.0], [47.5, 526.0], [47.6, 526.0], [47.7, 527.0], [47.8, 527.0], [47.9, 531.0], [48.0, 531.0], [48.1, 533.0], [48.2, 534.0], [48.3, 537.0], [48.4, 539.0], [48.5, 540.0], [48.6, 540.0], [48.7, 541.0], [48.8, 541.0], [48.9, 541.0], [49.0, 542.0], [49.1, 543.0], [49.2, 543.0], [49.3, 544.0], [49.4, 545.0], [49.5, 547.0], [49.6, 547.0], [49.7, 548.0], [49.8, 549.0], [49.9, 551.0], [50.0, 553.0], [50.1, 554.0], [50.2, 557.0], [50.3, 558.0], [50.4, 559.0], [50.5, 561.0], [50.6, 562.0], [50.7, 563.0], [50.8, 563.0], [50.9, 565.0], [51.0, 568.0], [51.1, 572.0], [51.2, 575.0], [51.3, 1894.0], [51.4, 2208.0], [51.5, 2372.0], [51.6, 2449.0], [51.7, 2488.0], [51.8, 2526.0], [51.9, 2548.0], [52.0, 2567.0], [52.1, 2593.0], [52.2, 2658.0], [52.3, 2675.0], [52.4, 2697.0], [52.5, 2736.0], [52.6, 2765.0], [52.7, 2812.0], [52.8, 2869.0], [52.9, 2886.0], [53.0, 2892.0], [53.1, 2922.0], [53.2, 2935.0], [53.3, 2951.0], [53.4, 2966.0], [53.5, 2988.0], [53.6, 3009.0], [53.7, 3014.0], [53.8, 3035.0], [53.9, 3048.0], [54.0, 3056.0], [54.1, 3069.0], [54.2, 3081.0], [54.3, 3112.0], [54.4, 3145.0], [54.5, 3162.0], [54.6, 3177.0], [54.7, 3191.0], [54.8, 3202.0], [54.9, 3222.0], [55.0, 3244.0], [55.1, 3259.0], [55.2, 3272.0], [55.3, 3281.0], [55.4, 3299.0], [55.5, 3338.0], [55.6, 3350.0], [55.7, 3364.0], [55.8, 3381.0], [55.9, 3394.0], [56.0, 3417.0], [56.1, 3433.0], [56.2, 3462.0], [56.3, 3481.0], [56.4, 3515.0], [56.5, 3535.0], [56.6, 3539.0], [56.7, 3555.0], [56.8, 3564.0], [56.9, 3593.0], [57.0, 3598.0], [57.1, 3604.0], [57.2, 3608.0], [57.3, 3618.0], [57.4, 3621.0], [57.5, 3629.0], [57.6, 3636.0], [57.7, 3651.0], [57.8, 3673.0], [57.9, 3691.0], [58.0, 3704.0], [58.1, 3717.0], [58.2, 3726.0], [58.3, 3740.0], [58.4, 3746.0], [58.5, 3764.0], [58.6, 3768.0], [58.7, 3773.0], [58.8, 3804.0], [58.9, 3809.0], [59.0, 3824.0], [59.1, 3852.0], [59.2, 3870.0], [59.3, 3910.0], [59.4, 3938.0], [59.5, 3972.0], [59.6, 4002.0], [59.7, 4023.0], [59.8, 4041.0], [59.9, 4055.0], [60.0, 4065.0], [60.1, 4084.0], [60.2, 4101.0], [60.3, 4138.0], [60.4, 4147.0], [60.5, 4161.0], [60.6, 4173.0], [60.7, 4186.0], [60.8, 4199.0], [60.9, 4214.0], [61.0, 4228.0], [61.1, 4241.0], [61.2, 4247.0], [61.3, 4258.0], [61.4, 4266.0], [61.5, 4283.0], [61.6, 4306.0], [61.7, 4325.0], [61.8, 4331.0], [61.9, 4353.0], [62.0, 4361.0], [62.1, 4372.0], [62.2, 4380.0], [62.3, 4389.0], [62.4, 4397.0], [62.5, 4406.0], [62.6, 4417.0], [62.7, 4431.0], [62.8, 4443.0], [62.9, 4471.0], [63.0, 4501.0], [63.1, 4509.0], [63.2, 4522.0], [63.3, 4533.0], [63.4, 4544.0], [63.5, 4561.0], [63.6, 4573.0], [63.7, 4590.0], [63.8, 4612.0], [63.9, 4621.0], [64.0, 4627.0], [64.1, 4643.0], [64.2, 4649.0], [64.3, 4674.0], [64.4, 4714.0], [64.5, 4727.0], [64.6, 4735.0], [64.7, 4741.0], [64.8, 4769.0], [64.9, 4795.0], [65.0, 4817.0], [65.1, 4831.0], [65.2, 4884.0], [65.3, 4907.0], [65.4, 4932.0], [65.5, 4965.0], [65.6, 5001.0], [65.7, 5016.0], [65.8, 5038.0], [65.9, 5041.0], [66.0, 5047.0], [66.1, 5058.0], [66.2, 5070.0], [66.3, 5091.0], [66.4, 5096.0], [66.5, 5108.0], [66.6, 5110.0], [66.7, 5122.0], [66.8, 5127.0], [66.9, 5136.0], [67.0, 5149.0], [67.1, 5161.0], [67.2, 5172.0], [67.3, 5201.0], [67.4, 5216.0], [67.5, 5268.0], [67.6, 5277.0], [67.7, 5291.0], [67.8, 5301.0], [67.9, 5308.0], [68.0, 5337.0], [68.1, 5342.0], [68.2, 5360.0], [68.3, 5380.0], [68.4, 5396.0], [68.5, 5419.0], [68.6, 5439.0], [68.7, 5454.0], [68.8, 5474.0], [68.9, 5491.0], [69.0, 5513.0], [69.1, 5541.0], [69.2, 5581.0], [69.3, 5592.0], [69.4, 5601.0], [69.5, 5614.0], [69.6, 5633.0], [69.7, 5639.0], [69.8, 5648.0], [69.9, 5666.0], [70.0, 5693.0], [70.1, 5715.0], [70.2, 5742.0], [70.3, 5753.0], [70.4, 5762.0], [70.5, 5767.0], [70.6, 5776.0], [70.7, 5782.0], [70.8, 5789.0], [70.9, 5793.0], [71.0, 5796.0], [71.1, 5800.0], [71.2, 5807.0], [71.3, 5818.0], [71.4, 5825.0], [71.5, 5828.0], [71.6, 5837.0], [71.7, 5842.0], [71.8, 5855.0], [71.9, 5865.0], [72.0, 5869.0], [72.1, 5872.0], [72.2, 5883.0], [72.3, 5898.0], [72.4, 5919.0], [72.5, 5942.0], [72.6, 5948.0], [72.7, 5962.0], [72.8, 5975.0], [72.9, 5982.0], [73.0, 5992.0], [73.1, 6008.0], [73.2, 6016.0], [73.3, 6022.0], [73.4, 6037.0], [73.5, 6060.0], [73.6, 6063.0], [73.7, 6069.0], [73.8, 6077.0], [73.9, 6081.0], [74.0, 6089.0], [74.1, 6108.0], [74.2, 6122.0], [74.3, 6134.0], [74.4, 6160.0], [74.5, 6168.0], [74.6, 6175.0], [74.7, 6179.0], [74.8, 6187.0], [74.9, 6194.0], [75.0, 6212.0], [75.1, 6234.0], [75.2, 6250.0], [75.3, 6269.0], [75.4, 6278.0], [75.5, 6284.0], [75.6, 6295.0], [75.7, 6303.0], [75.8, 6320.0], [75.9, 6332.0], [76.0, 6357.0], [76.1, 6376.0], [76.2, 6401.0], [76.3, 6409.0], [76.4, 6414.0], [76.5, 6417.0], [76.6, 6425.0], [76.7, 6432.0], [76.8, 6439.0], [76.9, 6445.0], [77.0, 6452.0], [77.1, 6464.0], [77.2, 6468.0], [77.3, 6474.0], [77.4, 6486.0], [77.5, 6499.0], [77.6, 6507.0], [77.7, 6524.0], [77.8, 6536.0], [77.9, 6542.0], [78.0, 6550.0], [78.1, 6569.0], [78.2, 6660.0], [78.3, 6696.0], [78.4, 6736.0], [78.5, 6762.0], [78.6, 6783.0], [78.7, 6807.0], [78.8, 6820.0], [78.9, 6920.0], [79.0, 6933.0], [79.1, 6967.0], [79.2, 7001.0], [79.3, 7039.0], [79.4, 7065.0], [79.5, 7092.0], [79.6, 7104.0], [79.7, 7171.0], [79.8, 7214.0], [79.9, 7245.0], [80.0, 7265.0], [80.1, 7291.0], [80.2, 7311.0], [80.3, 7339.0], [80.4, 7369.0], [80.5, 7400.0], [80.6, 7435.0], [80.7, 7474.0], [80.8, 7548.0], [80.9, 7582.0], [81.0, 7610.0], [81.1, 7622.0], [81.2, 7639.0], [81.3, 7665.0], [81.4, 7680.0], [81.5, 7707.0], [81.6, 7724.0], [81.7, 7736.0], [81.8, 7769.0], [81.9, 7791.0], [82.0, 7804.0], [82.1, 7821.0], [82.2, 7869.0], [82.3, 7883.0], [82.4, 7905.0], [82.5, 7919.0], [82.6, 7932.0], [82.7, 7971.0], [82.8, 7980.0], [82.9, 8023.0], [83.0, 8036.0], [83.1, 8043.0], [83.2, 8062.0], [83.3, 8083.0], [83.4, 8094.0], [83.5, 8109.0], [83.6, 8136.0], [83.7, 8160.0], [83.8, 8176.0], [83.9, 8183.0], [84.0, 8215.0], [84.1, 8257.0], [84.2, 8263.0], [84.3, 8274.0], [84.4, 8291.0], [84.5, 8312.0], [84.6, 8357.0], [84.7, 8371.0], [84.8, 8416.0], [84.9, 8450.0], [85.0, 8504.0], [85.1, 8524.0], [85.2, 8546.0], [85.3, 8561.0], [85.4, 8615.0], [85.5, 8636.0], [85.6, 8662.0], [85.7, 8705.0], [85.8, 8714.0], [85.9, 8723.0], [86.0, 8730.0], [86.1, 8736.0], [86.2, 8744.0], [86.3, 8760.0], [86.4, 8770.0], [86.5, 8793.0], [86.6, 8839.0], [86.7, 8869.0], [86.8, 8879.0], [86.9, 8897.0], [87.0, 8919.0], [87.1, 8933.0], [87.2, 8945.0], [87.3, 8967.0], [87.4, 8986.0], [87.5, 9006.0], [87.6, 9019.0], [87.7, 9080.0], [87.8, 9125.0], [87.9, 9170.0], [88.0, 9212.0], [88.1, 9229.0], [88.2, 9239.0], [88.3, 9268.0], [88.4, 9302.0], [88.5, 9334.0], [88.6, 9356.0], [88.7, 9373.0], [88.8, 9390.0], [88.9, 9410.0], [89.0, 9432.0], [89.1, 9458.0], [89.2, 9474.0], [89.3, 9506.0], [89.4, 9536.0], [89.5, 9585.0], [89.6, 9608.0], [89.7, 9618.0], [89.8, 9640.0], [89.9, 9662.0], [90.0, 9683.0], [90.1, 9714.0], [90.2, 9727.0], [90.3, 9736.0], [90.4, 9744.0], [90.5, 9749.0], [90.6, 9764.0], [90.7, 9773.0], [90.8, 9800.0], [90.9, 9811.0], [91.0, 9816.0], [91.1, 9821.0], [91.2, 9827.0], [91.3, 9843.0], [91.4, 9855.0], [91.5, 9864.0], [91.6, 9875.0], [91.7, 9886.0], [91.8, 9893.0], [91.9, 9921.0], [92.0, 9939.0], [92.1, 9969.0], [92.2, 10000.0], [92.3, 10007.0], [92.4, 10015.0], [92.5, 10040.0], [92.6, 10052.0], [92.7, 10062.0], [92.8, 10074.0], [92.9, 10083.0], [93.0, 10104.0], [93.1, 10144.0], [93.2, 10204.0], [93.3, 10233.0], [93.4, 10259.0], [93.5, 10268.0], [93.6, 10286.0], [93.7, 10295.0], [93.8, 10349.0], [93.9, 10364.0], [94.0, 10375.0], [94.1, 10384.0], [94.2, 10391.0], [94.3, 10397.0], [94.4, 10406.0], [94.5, 10540.0], [94.6, 10549.0], [94.7, 10555.0], [94.8, 10567.0], [94.9, 10583.0], [95.0, 10595.0], [95.1, 10609.0], [95.2, 10622.0], [95.3, 10646.0], [95.4, 10690.0], [95.5, 10718.0], [95.6, 10731.0], [95.7, 10758.0], [95.8, 10777.0], [95.9, 10790.0], [96.0, 10809.0], [96.1, 10834.0], [96.2, 10856.0], [96.3, 10883.0], [96.4, 10905.0], [96.5, 10909.0], [96.6, 10940.0], [96.7, 10963.0], [96.8, 10980.0], [96.9, 11022.0], [97.0, 11034.0], [97.1, 11044.0], [97.2, 11059.0], [97.3, 11104.0], [97.4, 11110.0], [97.5, 11126.0], [97.6, 11135.0], [97.7, 11142.0], [97.8, 11148.0], [97.9, 11161.0], [98.0, 11173.0], [98.1, 11186.0], [98.2, 11204.0], [98.3, 11212.0], [98.4, 11222.0], [98.5, 11232.0], [98.6, 11239.0], [98.7, 11248.0], [98.8, 11255.0], [98.9, 11264.0], [99.0, 11280.0], [99.1, 11286.0], [99.2, 11348.0], [99.3, 11362.0], [99.4, 11393.0], [99.5, 11413.0], [99.6, 11425.0], [99.7, 11444.0], [99.8, 11470.0], [99.9, 11493.0], [100.0, 11519.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 581.0, "series": [{"data": [[0.0, 202.0], [100.0, 189.0], [200.0, 470.0], [300.0, 267.0], [400.0, 581.0], [500.0, 340.0], [800.0, 1.0], [1800.0, 2.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 7.0], [2400.0, 7.0], [2500.0, 15.0], [2600.0, 12.0], [2700.0, 9.0], [2800.0, 15.0], [2900.0, 22.0], [3000.0, 27.0], [3100.0, 22.0], [3200.0, 25.0], [3300.0, 21.0], [3400.0, 17.0], [3500.0, 28.0], [3600.0, 36.0], [3700.0, 32.0], [3800.0, 21.0], [3900.0, 12.0], [4000.0, 23.0], [4100.0, 26.0], [4200.0, 30.0], [4300.0, 35.0], [4400.0, 22.0], [4500.0, 31.0], [4600.0, 24.0], [4700.0, 22.0], [4800.0, 14.0], [4900.0, 13.0], [5000.0, 33.0], [5100.0, 35.0], [5200.0, 20.0], [5300.0, 24.0], [5400.0, 20.0], [5500.0, 18.0], [5600.0, 27.0], [5700.0, 42.0], [5800.0, 49.0], [5900.0, 28.0], [6000.0, 41.0], [6100.0, 35.0], [6200.0, 29.0], [6300.0, 22.0], [6400.0, 53.0], [6500.0, 25.0], [6600.0, 7.0], [6700.0, 13.0], [6800.0, 8.0], [6900.0, 14.0], [7000.0, 15.0], [7100.0, 8.0], [7200.0, 15.0], [7300.0, 14.0], [7400.0, 9.0], [7500.0, 10.0], [7600.0, 20.0], [7700.0, 20.0], [7800.0, 16.0], [7900.0, 19.0], [8000.0, 24.0], [8100.0, 22.0], [8200.0, 19.0], [8300.0, 13.0], [8400.0, 8.0], [8500.0, 15.0], [8600.0, 12.0], [8700.0, 34.0], [8800.0, 18.0], [8900.0, 21.0], [9000.0, 10.0], [9100.0, 8.0], [9200.0, 18.0], [9300.0, 19.0], [9400.0, 16.0], [9500.0, 12.0], [9600.0, 20.0], [9700.0, 29.0], [9800.0, 43.0], [9900.0, 13.0], [10000.0, 32.0], [10100.0, 8.0], [10200.0, 21.0], [10300.0, 24.0], [10400.0, 6.0], [10500.0, 22.0], [10600.0, 17.0], [10700.0, 21.0], [10800.0, 16.0], [10900.0, 19.0], [11000.0, 17.0], [11100.0, 35.0], [11200.0, 42.0], [11300.0, 10.0], [11400.0, 20.0], [11500.0, 3.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2049.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1950.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2049.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1827.7130000000013, "minX": 1.66603992E12, "maxY": 1827.7130000000013, "series": [{"data": [[1.66603992E12, 1827.7130000000013]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66603992E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 43.0, "minX": 1.0, "maxY": 11519.0, "series": [{"data": [[2.0, 11511.0], [3.0, 11506.0], [4.0, 11498.0], [5.0, 11493.0], [6.0, 11486.0], [7.0, 11481.0], [8.0, 11476.0], [9.0, 11470.0], [10.0, 11464.0], [11.0, 11457.0], [12.0, 11448.0], [13.0, 11444.0], [14.0, 11439.0], [15.0, 11434.0], [16.0, 11429.0], [17.0, 11425.0], [18.0, 11419.0], [19.0, 11412.0], [20.0, 11393.0], [21.0, 11413.0], [22.0, 11408.0], [23.0, 11416.0], [24.0, 11413.0], [25.0, 11396.0], [26.0, 11388.0], [27.0, 11384.0], [28.0, 11367.0], [29.0, 11356.0], [30.0, 11354.0], [31.0, 11362.0], [33.0, 11348.0], [32.0, 11354.0], [35.0, 11292.0], [34.0, 11298.0], [37.0, 11281.0], [36.0, 11286.0], [39.0, 11267.0], [38.0, 11275.0], [41.0, 11255.0], [40.0, 11264.0], [43.0, 11248.0], [42.0, 11252.0], [45.0, 11261.0], [44.0, 11265.0], [47.0, 11251.0], [46.0, 11257.0], [49.0, 11234.0], [48.0, 11239.0], [51.0, 11285.0], [50.0, 11291.0], [53.0, 11281.0], [52.0, 11280.0], [55.0, 11236.0], [54.0, 11224.0], [57.0, 11227.0], [56.0, 11230.0], [59.0, 11216.0], [58.0, 11222.0], [61.0, 11208.0], [60.0, 11212.0], [63.0, 11200.0], [62.0, 11204.0], [67.0, 11165.0], [66.0, 11152.0], [65.0, 11176.0], [64.0, 11186.0], [71.0, 11142.0], [70.0, 11148.0], [69.0, 11154.0], [68.0, 11161.0], [75.0, 11130.0], [74.0, 11143.0], [73.0, 11200.0], [72.0, 11179.0], [79.0, 11242.0], [78.0, 11248.0], [77.0, 11251.0], [76.0, 11256.0], [83.0, 11244.0], [82.0, 11173.0], [81.0, 11148.0], [80.0, 11235.0], [87.0, 11121.0], [86.0, 11127.0], [85.0, 11126.0], [84.0, 11215.0], [91.0, 11104.0], [90.0, 11110.0], [89.0, 11134.0], [88.0, 11138.0], [95.0, 10546.0], [94.0, 10546.0], [93.0, 10552.0], [92.0, 11107.0], [99.0, 11204.0], [98.0, 11206.0], [97.0, 11213.0], [96.0, 11232.0], [103.0, 11165.0], [102.0, 11173.0], [101.0, 11177.0], [100.0, 11193.0], [107.0, 11137.0], [106.0, 11141.0], [105.0, 11145.0], [104.0, 11148.0], [111.0, 11110.0], [110.0, 11115.0], [109.0, 11125.0], [108.0, 11135.0], [115.0, 11075.0], [114.0, 11081.0], [113.0, 11102.0], [112.0, 11106.0], [119.0, 11044.0], [118.0, 11047.0], [117.0, 11055.0], [116.0, 11059.0], [123.0, 11045.0], [122.0, 11033.0], [121.0, 11037.0], [120.0, 11042.0], [127.0, 11023.0], [126.0, 11034.0], [125.0, 11024.0], [124.0, 11041.0], [135.0, 10963.0], [134.0, 10973.0], [133.0, 10974.0], [132.0, 10980.0], [131.0, 10985.0], [130.0, 11022.0], [129.0, 11015.0], [128.0, 11005.0], [143.0, 10940.0], [142.0, 10881.0], [141.0, 10947.0], [140.0, 10951.0], [139.0, 10958.0], [138.0, 10907.0], [137.0, 10966.0], [136.0, 10909.0], [151.0, 10898.0], [150.0, 10906.0], [149.0, 10900.0], [148.0, 10905.0], [147.0, 10906.0], [146.0, 10911.0], [145.0, 10916.0], [144.0, 10932.0], [159.0, 10837.0], [158.0, 10841.0], [157.0, 10845.0], [156.0, 10856.0], [155.0, 10861.0], [154.0, 10873.0], [153.0, 10883.0], [152.0, 10890.0], [167.0, 10794.0], [166.0, 10799.0], [165.0, 10804.0], [164.0, 10809.0], [163.0, 10815.0], [162.0, 10819.0], [161.0, 10824.0], [160.0, 10834.0], [175.0, 10763.0], [174.0, 10770.0], [173.0, 10777.0], [172.0, 10784.0], [171.0, 10789.0], [170.0, 10777.0], [169.0, 10783.0], [168.0, 10790.0], [183.0, 10714.0], [182.0, 10720.0], [181.0, 10726.0], [180.0, 10731.0], [179.0, 10739.0], [178.0, 10744.0], [177.0, 10744.0], [176.0, 10758.0], [191.0, 10612.0], [190.0, 10620.0], [189.0, 10627.0], [188.0, 10638.0], [187.0, 10664.0], [186.0, 10690.0], [185.0, 10695.0], [184.0, 10708.0], [199.0, 10567.0], [198.0, 10573.0], [197.0, 10583.0], [196.0, 10589.0], [195.0, 10601.0], [194.0, 10609.0], [193.0, 10612.0], [192.0, 10622.0], [207.0, 10540.0], [206.0, 10546.0], [205.0, 10555.0], [204.0, 10558.0], [203.0, 10718.0], [202.0, 10725.0], [201.0, 10553.0], [200.0, 10560.0], [215.0, 10606.0], [214.0, 10540.0], [213.0, 10640.0], [212.0, 10657.0], [211.0, 10646.0], [210.0, 10652.0], [209.0, 10549.0], [208.0, 10558.0], [223.0, 10481.0], [222.0, 10552.0], [221.0, 10580.0], [220.0, 10570.0], [219.0, 10591.0], [218.0, 10586.0], [217.0, 10595.0], [216.0, 10601.0], [231.0, 10406.0], [230.0, 10409.0], [229.0, 10403.0], [228.0, 10387.0], [227.0, 10390.0], [226.0, 10397.0], [225.0, 10401.0], [224.0, 10403.0], [239.0, 10377.0], [238.0, 10384.0], [237.0, 10389.0], [236.0, 10394.0], [235.0, 10397.0], [234.0, 10384.0], [233.0, 10391.0], [232.0, 10393.0], [247.0, 10366.0], [246.0, 10362.0], [245.0, 10375.0], [244.0, 10373.0], [243.0, 10382.0], [242.0, 10357.0], [241.0, 10364.0], [240.0, 10369.0], [255.0, 10290.0], [254.0, 10295.0], [253.0, 10290.0], [252.0, 10304.0], [251.0, 10332.0], [250.0, 10340.0], [249.0, 10349.0], [248.0, 10353.0], [270.0, 9765.0], [271.0, 9758.0], [269.0, 9770.0], [268.0, 9502.0], [267.0, 9617.0], [266.0, 9474.0], [265.0, 9506.0], [264.0, 9515.0], [263.0, 9529.0], [257.0, 10287.0], [256.0, 10286.0], [259.0, 10263.0], [258.0, 10283.0], [262.0, 9535.0], [261.0, 10247.0], [260.0, 10260.0], [286.0, 10249.0], [287.0, 10233.0], [285.0, 10252.0], [284.0, 10153.0], [283.0, 10259.0], [282.0, 10266.0], [281.0, 10268.0], [280.0, 10273.0], [279.0, 10276.0], [273.0, 9749.0], [272.0, 9730.0], [275.0, 9733.0], [274.0, 9740.0], [278.0, 9744.0], [277.0, 9747.0], [276.0, 9749.0], [302.0, 10137.0], [303.0, 10127.0], [301.0, 10144.0], [300.0, 10062.0], [299.0, 10074.0], [298.0, 10085.0], [297.0, 10083.0], [296.0, 10096.0], [295.0, 10097.0], [289.0, 10208.0], [288.0, 10212.0], [291.0, 10204.0], [290.0, 10205.0], [294.0, 10104.0], [293.0, 10194.0], [292.0, 10197.0], [318.0, 10042.0], [319.0, 9966.0], [317.0, 10049.0], [316.0, 10052.0], [315.0, 10056.0], [314.0, 10060.0], [313.0, 10065.0], [312.0, 10070.0], [311.0, 10075.0], [305.0, 10021.0], [304.0, 10123.0], [307.0, 10010.0], [306.0, 10015.0], [310.0, 10077.0], [309.0, 10082.0], [308.0, 9998.0], [334.0, 9886.0], [335.0, 9879.0], [333.0, 9932.0], [332.0, 9896.0], [331.0, 9888.0], [330.0, 9993.0], [329.0, 9969.0], [328.0, 9959.0], [327.0, 9994.0], [321.0, 10009.0], [320.0, 10005.0], [323.0, 10000.0], [322.0, 10007.0], [326.0, 10001.0], [325.0, 10005.0], [324.0, 10012.0], [350.0, 9896.0], [351.0, 9893.0], [349.0, 9910.0], [348.0, 9937.0], [347.0, 10019.0], [346.0, 9921.0], [345.0, 10058.0], [344.0, 10050.0], [343.0, 10032.0], [337.0, 9861.0], [336.0, 9864.0], [339.0, 9943.0], [338.0, 10073.0], [342.0, 10040.0], [341.0, 9938.0], [340.0, 9939.0], [366.0, 9841.0], [367.0, 9836.0], [365.0, 9843.0], [364.0, 9848.0], [363.0, 9853.0], [362.0, 9855.0], [361.0, 9857.0], [360.0, 9865.0], [359.0, 9864.0], [353.0, 9887.0], [352.0, 9890.0], [355.0, 9877.0], [354.0, 9886.0], [358.0, 9867.0], [357.0, 9871.0], [356.0, 9875.0], [382.0, 9816.0], [383.0, 9812.0], [381.0, 9821.0], [380.0, 9823.0], [379.0, 9796.0], [378.0, 9800.0], [377.0, 9805.0], [376.0, 9811.0], [375.0, 9808.0], [369.0, 9827.0], [368.0, 9833.0], [371.0, 9822.0], [370.0, 9826.0], [374.0, 9812.0], [373.0, 9815.0], [372.0, 9821.0], [398.0, 9744.0], [399.0, 9738.0], [397.0, 9748.0], [396.0, 9716.0], [395.0, 9723.0], [394.0, 9764.0], [393.0, 9771.0], [392.0, 9748.0], [391.0, 9756.0], [385.0, 9830.0], [387.0, 9819.0], [386.0, 9786.0], [390.0, 9796.0], [389.0, 9773.0], [388.0, 9817.0], [414.0, 9626.0], [415.0, 9662.0], [413.0, 9673.0], [412.0, 9640.0], [411.0, 9683.0], [410.0, 9647.0], [409.0, 9692.0], [408.0, 9696.0], [407.0, 9701.0], [401.0, 9729.0], [400.0, 9736.0], [403.0, 9721.0], [402.0, 9727.0], [406.0, 9665.0], [405.0, 9670.0], [404.0, 9714.0], [430.0, 9551.0], [431.0, 9536.0], [429.0, 9562.0], [428.0, 9580.0], [427.0, 9585.0], [426.0, 9590.0], [425.0, 9601.0], [424.0, 9608.0], [423.0, 9613.0], [417.0, 9609.0], [416.0, 9655.0], [419.0, 9598.0], [418.0, 9646.0], [422.0, 9618.0], [421.0, 9624.0], [420.0, 9633.0], [446.0, 9403.0], [447.0, 9397.0], [445.0, 9410.0], [444.0, 9415.0], [443.0, 9422.0], [442.0, 9426.0], [441.0, 9432.0], [440.0, 9438.0], [439.0, 9443.0], [433.0, 9478.0], [432.0, 9486.0], [435.0, 9468.0], [434.0, 9473.0], [438.0, 9449.0], [437.0, 9458.0], [436.0, 9463.0], [462.0, 9334.0], [463.0, 9327.0], [461.0, 9339.0], [460.0, 9342.0], [459.0, 9348.0], [458.0, 9240.0], [457.0, 9356.0], [456.0, 9360.0], [455.0, 9365.0], [449.0, 9390.0], [448.0, 9394.0], [451.0, 9381.0], [450.0, 9385.0], [454.0, 9370.0], [453.0, 9373.0], [452.0, 9379.0], [478.0, 9227.0], [479.0, 9224.0], [477.0, 9229.0], [476.0, 9233.0], [475.0, 9237.0], [474.0, 9239.0], [473.0, 9243.0], [472.0, 9251.0], [471.0, 9232.0], [465.0, 9312.0], [464.0, 9318.0], [467.0, 9297.0], [466.0, 9302.0], [470.0, 9268.0], [469.0, 9280.0], [468.0, 9274.0], [494.0, 9110.0], [495.0, 9007.0], [493.0, 9016.0], [492.0, 9019.0], [491.0, 9125.0], [490.0, 9027.0], [489.0, 9033.0], [488.0, 9142.0], [487.0, 9184.0], [481.0, 9212.0], [480.0, 9219.0], [483.0, 9204.0], [482.0, 9170.0], [486.0, 9152.0], [485.0, 9155.0], [484.0, 9200.0], [510.0, 8988.0], [511.0, 8979.0], [509.0, 8998.0], [508.0, 9006.0], [507.0, 8899.0], [506.0, 9018.0], [505.0, 9080.0], [504.0, 8927.0], [503.0, 8933.0], [497.0, 9096.0], [496.0, 9100.0], [499.0, 8986.0], [498.0, 8998.0], [502.0, 8967.0], [501.0, 8970.0], [500.0, 9077.0], [540.0, 8793.0], [542.0, 8786.0], [538.0, 8831.0], [536.0, 8839.0], [534.0, 8856.0], [532.0, 8869.0], [530.0, 8876.0], [528.0, 8879.0], [526.0, 8897.0], [514.0, 8966.0], [512.0, 8970.0], [518.0, 8936.0], [516.0, 8945.0], [524.0, 8898.0], [522.0, 8919.0], [520.0, 8932.0], [572.0, 8701.0], [574.0, 8718.0], [570.0, 8735.0], [568.0, 8705.0], [566.0, 8719.0], [564.0, 8714.0], [562.0, 8723.0], [560.0, 8731.0], [558.0, 8741.0], [546.0, 8760.0], [544.0, 8767.0], [550.0, 8851.0], [548.0, 8763.0], [556.0, 8730.0], [554.0, 8736.0], [552.0, 8744.0], [604.0, 8453.0], [606.0, 8428.0], [602.0, 8524.0], [600.0, 8504.0], [598.0, 8513.0], [596.0, 8524.0], [594.0, 8530.0], [592.0, 8546.0], [590.0, 8561.0], [578.0, 8653.0], [576.0, 8693.0], [582.0, 8636.0], [580.0, 8646.0], [588.0, 8564.0], [586.0, 8615.0], [584.0, 8625.0], [636.0, 8253.0], [638.0, 8257.0], [634.0, 8264.0], [632.0, 8258.0], [630.0, 8266.0], [628.0, 8277.0], [626.0, 8286.0], [624.0, 8294.0], [622.0, 8371.0], [610.0, 8378.0], [608.0, 8435.0], [614.0, 8362.0], [612.0, 8374.0], [620.0, 8307.0], [618.0, 8318.0], [616.0, 8350.0], [668.0, 8085.0], [670.0, 8096.0], [666.0, 8094.0], [664.0, 8101.0], [662.0, 8119.0], [660.0, 8092.0], [658.0, 8134.0], [656.0, 8138.0], [654.0, 8154.0], [642.0, 8195.0], [640.0, 8222.0], [646.0, 8177.0], [644.0, 8183.0], [652.0, 8167.0], [650.0, 8176.0], [648.0, 8180.0], [700.0, 7873.0], [702.0, 7932.0], [698.0, 7921.0], [696.0, 7927.0], [694.0, 7971.0], [692.0, 7968.0], [690.0, 7976.0], [688.0, 7984.0], [686.0, 8018.0], [674.0, 8034.0], [672.0, 8043.0], [678.0, 8051.0], [676.0, 8063.0], [684.0, 8023.0], [682.0, 8036.0], [680.0, 8043.0], [732.0, 7743.0], [734.0, 7736.0], [730.0, 7767.0], [728.0, 7781.0], [726.0, 7790.0], [724.0, 7796.0], [722.0, 7803.0], [720.0, 7812.0], [718.0, 7819.0], [706.0, 7905.0], [704.0, 7912.0], [710.0, 7883.0], [708.0, 7898.0], [716.0, 7855.0], [714.0, 7867.0], [712.0, 7870.0], [764.0, 7591.0], [766.0, 7571.0], [762.0, 7605.0], [760.0, 7618.0], [758.0, 7611.0], [756.0, 7622.0], [754.0, 7639.0], [752.0, 7645.0], [750.0, 7647.0], [738.0, 7724.0], [736.0, 7726.0], [742.0, 7697.0], [740.0, 7711.0], [748.0, 7676.0], [746.0, 7678.0], [744.0, 7700.0], [796.0, 7360.0], [798.0, 7344.0], [794.0, 7369.0], [792.0, 7377.0], [790.0, 7383.0], [788.0, 7389.0], [786.0, 7400.0], [784.0, 7411.0], [782.0, 7416.0], [770.0, 7543.0], [768.0, 7555.0], [774.0, 7466.0], [772.0, 7519.0], [780.0, 7424.0], [778.0, 7435.0], [776.0, 6316.0], [828.0, 6468.0], [830.0, 7248.0], [826.0, 7260.0], [824.0, 7265.0], [822.0, 7276.0], [820.0, 7274.0], [818.0, 7280.0], [816.0, 6513.0], [814.0, 6520.0], [802.0, 7329.0], [800.0, 7339.0], [806.0, 6928.5], [804.0, 7326.0], [812.0, 7302.0], [810.0, 7306.0], [808.0, 7311.0], [860.0, 7104.0], [862.0, 7107.0], [858.0, 6432.0], [856.0, 6409.0], [854.0, 7155.0], [852.0, 6414.0], [850.0, 7171.0], [848.0, 7181.0], [846.0, 6415.0], [834.0, 7240.0], [832.0, 7245.0], [838.0, 6484.0], [836.0, 7226.0], [844.0, 6429.0], [842.0, 7209.0], [840.0, 7214.0], [892.0, 6986.0], [894.0, 6982.0], [890.0, 6450.0], [888.0, 6464.0], [886.0, 6482.0], [884.0, 6491.0], [882.0, 6425.0], [880.0, 7044.0], [878.0, 7052.0], [866.0, 7095.0], [864.0, 7099.0], [870.0, 6404.0], [868.0, 6410.0], [876.0, 6457.0], [874.0, 6470.0], [872.0, 6415.0], [924.0, 6820.0], [926.0, 6814.0], [922.0, 6335.0], [920.0, 6376.0], [918.0, 6370.0], [916.0, 6920.0], [914.0, 6401.0], [912.0, 6409.0], [910.0, 6411.0], [898.0, 6967.0], [896.0, 6973.0], [902.0, 6450.0], [900.0, 6959.0], [908.0, 6437.0], [906.0, 6430.0], [904.0, 6943.0], [956.0, 6225.0], [958.0, 6713.0], [954.0, 6235.0], [952.0, 6737.0], [950.0, 6743.0], [948.0, 6749.0], [946.0, 6762.0], [944.0, 6269.0], [942.0, 6273.0], [930.0, 6807.0], [928.0, 6814.0], [934.0, 6303.0], [932.0, 6290.0], [940.0, 6280.0], [938.0, 6783.0], [936.0, 6295.0], [988.0, 6078.0], [990.0, 6551.0], [986.0, 6081.0], [984.0, 6579.0], [982.0, 6089.0], [980.0, 6630.0], [978.0, 6149.0], [976.0, 6154.0], [974.0, 6660.0], [962.0, 6696.0], [960.0, 6703.0], [966.0, 6193.0], [964.0, 6202.0], [972.0, 6166.0], [970.0, 6175.0], [968.0, 6181.0], [1020.0, 6451.0], [1022.0, 6002.0], [1018.0, 6460.0], [1016.0, 6468.0], [1014.0, 6030.0], [1012.0, 6013.0], [1010.0, 6493.0], [1008.0, 6018.0], [1006.0, 6179.0], [994.0, 6065.0], [992.0, 6540.0], [998.0, 6175.0], [996.0, 6063.0], [1004.0, 6187.0], [1002.0, 6168.0], [1000.0, 6172.0], [1080.0, 6194.0], [1084.0, 6187.0], [1076.0, 5782.0], [1072.0, 6224.0], [1068.0, 5868.0], [1064.0, 5902.0], [1060.0, 5919.0], [1056.0, 5932.0], [1052.0, 5857.0], [1028.0, 5951.0], [1024.0, 6440.0], [1036.0, 6384.0], [1032.0, 5944.0], [1048.0, 5871.0], [1044.0, 5981.0], [1040.0, 5992.0], [1144.0, 5767.0], [1148.0, 5988.0], [1136.0, 5802.0], [1100.0, 5821.0], [1096.0, 5828.0], [1092.0, 5851.0], [1088.0, 5948.0], [1132.0, 5780.0], [1128.0, 5826.0], [1124.0, 5796.0], [1120.0, 6081.0], [1116.0, 5789.0], [1112.0, 5795.0], [1108.0, 6109.0], [1104.0, 6120.0], [1208.0, 5403.0], [1212.0, 5383.0], [1204.0, 5760.0], [1200.0, 5771.0], [1196.0, 5784.0], [1192.0, 5480.0], [1188.0, 5489.0], [1184.0, 5508.0], [1180.0, 5826.0], [1156.0, 5666.0], [1152.0, 5737.0], [1164.0, 5880.0], [1160.0, 5898.0], [1176.0, 5581.0], [1172.0, 5602.0], [1168.0, 5866.0], [1272.0, 5723.0], [1248.0, 5551.0], [1252.0, 5088.0], [1256.0, 5173.0], [1276.0, 5638.0], [1268.0, 5136.0], [1264.0, 5149.0], [1216.0, 5360.0], [1220.0, 5342.0], [1224.0, 5916.0], [1228.0, 5302.0], [1244.0, 5211.0], [1240.0, 5123.0], [1236.0, 5277.0], [1232.0, 5291.0], [1260.0, 5762.0], [1336.0, 5369.0], [1312.0, 5046.0], [1316.0, 5041.0], [1320.0, 5016.0], [1340.0, 4907.0], [1332.0, 4936.0], [1328.0, 5451.0], [1280.0, 5102.0], [1284.0, 5690.0], [1288.0, 5647.0], [1292.0, 5630.0], [1308.0, 5102.0], [1304.0, 5614.0], [1300.0, 5065.0], [1296.0, 5038.0], [1324.0, 4965.0], [1400.0, 5011.0], [1376.0, 5275.0], [1380.0, 4727.0], [1384.0, 4698.0], [1404.0, 5147.0], [1396.0, 4644.0], [1392.0, 4639.0], [1344.0, 5419.0], [1348.0, 4835.0], [1352.0, 5372.0], [1356.0, 5340.0], [1372.0, 5108.0], [1368.0, 5295.0], [1364.0, 5286.0], [1360.0, 5337.0], [1388.0, 4664.0], [1464.0, 4374.0], [1440.0, 4471.0], [1444.0, 4461.0], [1448.0, 4942.0], [1468.0, 4760.0], [1460.0, 4793.0], [1456.0, 4396.0], [1408.0, 4624.0], [1412.0, 4614.0], [1416.0, 5047.0], [1420.0, 4554.0], [1436.0, 4965.0], [1432.0, 4544.0], [1428.0, 4534.0], [1424.0, 4578.0], [1452.0, 4790.0], [1528.0, 4524.0], [1532.0, 4150.0], [1504.0, 4228.0], [1508.0, 4214.0], [1512.0, 4202.0], [1524.0, 4526.0], [1520.0, 4180.0], [1484.0, 4309.0], [1480.0, 4741.0], [1476.0, 4327.0], [1472.0, 4741.0], [1500.0, 4241.0], [1496.0, 4644.0], [1492.0, 4261.0], [1488.0, 4273.0], [1516.0, 4191.0], [1540.0, 4113.0], [1588.0, 4265.0], [1596.0, 4325.0], [1584.0, 4389.0], [1536.0, 4497.0], [1544.0, 4525.0], [1548.0, 4513.0], [1564.0, 4358.0], [1560.0, 4369.0], [1556.0, 4383.0], [1552.0, 4404.0], [1580.0, 882.8], [1568.0, 4003.0], [1572.0, 4006.0], [1576.0, 4406.0], [1592.0, 4350.0], [1652.0, 4065.0], [1660.0, 4002.0], [1612.0, 4217.0], [1608.0, 3840.0], [1604.0, 3856.0], [1600.0, 3899.0], [1648.0, 4075.0], [1636.0, 4101.0], [1640.0, 3740.0], [1644.0, 3729.0], [1632.0, 1368.6666666666667], [1628.0, 2079.0], [1624.0, 3773.0], [1620.0, 3803.0], [1616.0, 4184.0], [1656.0, 4034.0], [1668.0, 3650.0], [1720.0, 3608.0], [1688.0, 3824.0], [1684.0, 3599.0], [1680.0, 3602.0], [1664.0, 3643.0], [1672.0, 3629.5], [1676.0, 3621.0], [1692.0, 3605.0], [1696.0, 3564.0], [1700.0, 3808.0], [1704.0, 3764.0], [1708.0, 3742.0], [1724.0, 3624.0], [1716.0, 3704.0], [1712.0, 3724.0], [1784.0, 3274.0], [1788.0, 3232.0], [1760.0, 3406.0], [1764.0, 3428.0], [1768.0, 3391.0], [1780.0, 3346.0], [1776.0, 3389.0], [1740.0, 3539.0], [1732.0, 3599.0], [1728.0, 3651.0], [1756.0, 3261.0], [1752.0, 3465.0], [1748.0, 3494.0], [1744.0, 3539.0], [1772.0, 3350.0], [1848.0, 3048.0], [1824.0, 3083.0], [1828.0, 3165.0], [1832.0, 3011.0], [1852.0, 3039.5], [1844.0, 3072.0], [1840.0, 3069.0], [1792.0, 3281.0], [1796.0, 3270.0], [1800.0, 3204.0], [1804.0, 3189.0], [1820.0, 3112.0], [1816.0, 3224.0], [1812.0, 3147.0], [1808.0, 3250.0], [1836.0, 3112.0], [1868.0, 1507.0], [1916.0, 1346.5], [1888.0, 445.625], [1864.0, 1014.6666666666666], [1860.0, 3011.0], [1856.0, 3022.0], [1912.0, 2671.0], [1908.0, 2675.0], [1904.0, 2676.0], [1884.0, 274.1875], [1880.0, 997.6666666666666], [1876.0, 1477.5], [1872.0, 1000.3333333333334], [1896.0, 1409.0], [1900.0, 2763.0], [1892.0, 669.6], [1972.0, 89.0], [1976.0, 75.0], [1952.0, 100.66666666666667], [1980.0, 514.0], [1956.0, 172.66666666666666], [1960.0, 221.16666666666666], [1932.0, 901.6666666666666], [1928.0, 2522.0], [1924.0, 741.0], [1920.0, 1325.5], [1948.0, 291.0], [1944.0, 696.25], [1940.0, 1252.0], [1936.0, 1294.5], [1964.0, 150.83333333333331], [2036.0, 298.0], [2032.0, 299.0], [2024.0, 694.5], [2020.0, 301.0], [1988.0, 515.0], [1992.0, 512.4285714285713], [2000.0, 509.0], [2072.0, 86.0], [2152.0, 298.0], [2096.0, 285.0], [2088.0, 289.0], [2056.0, 286.0], [2168.0, 406.0], [2112.0, 435.0], [2128.0, 321.0], [2136.0, 340.6666666666667], [2160.0, 312.0], [2144.0, 448.0], [2288.0, 428.0], [2256.0, 318.3333333333333], [2264.0, 523.0], [2296.0, 372.5], [2280.0, 347.0], [2272.0, 418.0], [2176.0, 404.0], [2216.0, 283.0], [2208.0, 372.0], [2416.0, 559.0], [2368.0, 564.0], [2424.0, 489.0], [2376.0, 292.0], [2384.0, 390.0], [2392.0, 290.0], [2400.0, 387.0], [2328.0, 485.0], [2320.0, 446.75], [2344.0, 546.5], [2456.0, 413.0], [2448.0, 383.0], [2440.0, 348.5], [2480.0, 276.0], [2472.0, 277.0], [2464.0, 280.0], [2656.0, 377.0], [2632.0, 344.5], [2624.0, 461.0], [2584.0, 559.0], [2792.0, 431.0], [2800.0, 479.0], [2768.0, 448.0], [2752.0, 457.0], [2760.0, 459.0], [2776.0, 442.5], [2784.0, 449.0], [2688.0, 318.0], [2696.0, 325.3333333333333], [2704.0, 317.0], [2712.0, 450.0], [2936.0, 170.0], [2920.0, 151.0], [2912.0, 168.0], [3056.0, 354.14285714285717], [2968.0, 305.8], [3040.0, 511.0], [3048.0, 342.0], [3064.0, 410.3333333333333], [3008.0, 287.5], [3016.0, 375.5], [3024.0, 309.625], [3032.0, 416.0], [2960.0, 486.0], [2952.0, 480.5], [2944.0, 167.5], [2992.0, 383.5], [2984.0, 444.0], [2976.0, 512.0], [3000.0, 479.0], [3088.0, 381.75], [3096.0, 460.0], [3120.0, 496.0], [3072.0, 288.6875], [3128.0, 485.0], [3080.0, 338.6666666666667], [3176.0, 513.5], [3184.0, 503.8536585365853], [3192.0, 447.0], [3136.0, 447.0], [3144.0, 509.0], [3112.0, 285.0], [3104.0, 355.6666666666667], [3304.0, 398.5], [3264.0, 537.0], [3272.0, 410.0], [3280.0, 398.0], [3320.0, 453.5], [3224.0, 438.0], [3216.0, 439.0], [3208.0, 412.0], [3200.0, 563.0], [3256.0, 546.0], [3248.0, 549.0], [3232.0, 516.0], [3328.0, 419.0], [2073.0, 95.0], [2153.0, 285.0], [2065.0, 61.0], [2089.0, 288.5], [2049.0, 291.0], [2169.0, 408.0], [2113.0, 431.0], [2121.0, 377.0], [2145.0, 352.5], [2137.0, 299.0], [2281.0, 429.0], [2297.0, 392.0], [2289.0, 333.0], [2241.0, 313.0], [2257.0, 412.0], [2273.0, 417.0], [2185.0, 426.5], [2193.0, 398.6666666666667], [2201.0, 351.5], [2217.0, 282.0], [2417.0, 559.0], [2377.0, 389.0], [2393.0, 291.0], [2409.0, 328.0], [2321.0, 385.75], [2337.0, 563.0], [2481.0, 277.0], [2457.0, 281.0], [2449.0, 414.0], [2633.0, 394.0], [2641.0, 267.5], [2585.0, 406.0], [2617.0, 463.5], [2609.0, 422.0], [2593.0, 524.3333333333334], [2649.0, 365.3333333333333], [2793.0, 288.0], [2761.0, 459.0], [2769.0, 448.0], [2753.0, 363.0], [2777.0, 405.0], [2785.0, 432.0], [2689.0, 367.0], [2697.0, 291.0], [2705.0, 384.0], [2721.0, 445.0], [2921.0, 156.0], [2937.0, 166.66666666666666], [2913.0, 163.5], [3065.0, 400.6666666666667], [3041.0, 369.5], [3049.0, 374.0], [3057.0, 367.0], [3009.0, 297.3333333333333], [3017.0, 331.5], [3025.0, 288.6], [3033.0, 251.8], [2961.0, 486.0], [2969.0, 503.0], [2953.0, 325.0], [2945.0, 170.0], [2985.0, 443.0], [2993.0, 395.0], [3089.0, 264.75], [3129.0, 486.0], [3073.0, 240.5], [3081.0, 358.33333333333337], [3177.0, 473.0], [3185.0, 525.75], [3137.0, 474.0], [3145.0, 458.0], [3153.0, 427.0], [3113.0, 426.6666666666667], [3121.0, 522.0], [3105.0, 296.0], [3313.0, 456.0], [3265.0, 435.0], [3289.0, 401.0], [3321.0, 453.0], [3225.0, 413.0], [3217.0, 476.5], [3249.0, 548.0], [3241.0, 525.0], [3233.0, 527.5], [3329.0, 377.0], [1081.0, 5768.0], [1085.0, 5839.0], [1077.0, 6203.0], [1073.0, 5871.0], [1069.0, 6234.0], [1065.0, 5898.0], [1061.0, 6263.0], [1057.0, 6275.0], [1053.0, 5942.0], [1029.0, 5967.0], [1025.0, 5977.0], [1037.0, 5959.0], [1033.0, 6071.0], [1049.0, 6310.0], [1045.0, 6323.0], [1041.0, 6341.0], [1145.0, 6002.0], [1149.0, 5982.0], [1141.0, 5903.0], [1137.0, 6033.0], [1133.0, 6037.0], [1129.0, 6058.0], [1125.0, 6063.0], [1121.0, 5808.0], [1117.0, 6092.0], [1093.0, 6160.0], [1089.0, 6170.0], [1101.0, 6127.0], [1097.0, 6134.0], [1113.0, 5793.0], [1109.0, 5800.0], [1105.0, 5809.0], [1209.0, 5742.0], [1213.0, 5715.0], [1205.0, 5417.0], [1201.0, 5432.0], [1197.0, 5454.0], [1193.0, 5473.0], [1189.0, 5793.0], [1185.0, 5501.0], [1181.0, 5521.0], [1153.0, 5967.0], [1165.0, 5589.0], [1157.0, 5943.0], [1177.0, 5838.0], [1173.0, 5849.0], [1169.0, 5865.0], [1273.0, 5161.0], [1249.0, 5096.0], [1253.0, 5523.0], [1257.0, 5172.0], [1277.0, 5112.0], [1269.0, 5662.0], [1265.0, 5491.0], [1217.0, 5693.0], [1221.0, 5949.0], [1225.0, 5301.0], [1229.0, 5297.0], [1245.0, 5818.0], [1241.0, 5567.0], [1237.0, 5275.0], [1233.0, 5594.0], [1261.0, 5161.0], [1337.0, 4923.0], [1313.0, 5541.0], [1321.0, 5439.0], [1341.0, 5215.0], [1333.0, 5460.0], [1329.0, 5245.0], [1281.0, 5625.0], [1285.0, 4988.0], [1289.0, 5079.0], [1293.0, 5656.0], [1309.0, 5590.0], [1305.0, 5039.0], [1301.0, 5380.0], [1297.0, 5639.0], [1325.0, 5004.0], [1401.0, 4627.0], [1377.0, 4726.0], [1381.0, 4724.0], [1385.0, 5055.0], [1405.0, 4620.0], [1397.0, 5110.0], [1393.0, 4652.0], [1345.0, 5337.0], [1349.0, 5391.0], [1353.0, 4827.0], [1357.0, 4806.0], [1373.0, 4735.0], [1369.0, 4740.0], [1365.0, 5308.0], [1361.0, 4769.0], [1389.0, 5133.0], [1465.0, 4801.0], [1441.0, 4884.0], [1445.0, 4955.0], [1449.0, 4431.0], [1469.0, 4357.0], [1461.0, 4380.0], [1457.0, 4831.0], [1409.0, 5068.0], [1413.0, 5049.0], [1417.0, 5040.0], [1421.0, 4583.0], [1437.0, 4480.0], [1433.0, 4509.0], [1429.0, 4535.0], [1425.0, 4567.0], [1453.0, 4417.0], [1529.0, 4152.0], [1505.0, 4221.0], [1509.0, 4591.0], [1513.0, 4200.0], [1533.0, 4509.0], [1525.0, 4161.0], [1521.0, 4173.0], [1473.0, 4355.0], [1477.0, 4714.0], [1481.0, 4325.0], [1485.0, 4713.0], [1501.0, 4235.0], [1497.0, 4247.0], [1493.0, 4744.0], [1489.0, 4276.0], [1517.0, 4522.0], [1585.0, 3946.0], [1589.0, 3931.0], [1597.0, 3924.0], [1581.0, 1188.5], [1537.0, 4136.0], [1541.0, 4471.0], [1545.0, 4519.0], [1549.0, 4063.0], [1565.0, 4426.0], [1561.0, 4364.0], [1557.0, 4030.0], [1553.0, 4055.0], [1569.0, 4433.0], [1573.0, 4417.0], [1577.0, 3979.0], [1593.0, 3925.0], [1661.0, 3688.0], [1633.0, 2073.5], [1637.0, 3746.0], [1641.0, 4084.0], [1645.0, 3726.0], [1625.0, 4161.0], [1621.0, 4168.0], [1617.0, 3808.0], [1629.0, 3768.0], [1657.0, 3695.0], [1653.0, 3717.0], [1649.0, 3719.0], [1613.0, 3816.0], [1609.0, 4177.0], [1605.0, 4249.0], [1601.0, 4266.0], [1721.0, 3454.0], [1697.0, 3584.0], [1701.0, 3780.0], [1705.0, 3713.0], [1725.0, 3433.0], [1717.0, 3457.0], [1713.0, 3668.0], [1665.0, 3633.0], [1669.0, 3629.0], [1673.0, 3616.0], [1677.0, 3618.0], [1693.0, 3836.0], [1689.0, 3584.0], [1685.0, 3593.0], [1681.0, 3608.0], [1709.0, 3740.0], [1785.0, 3307.0], [1761.0, 3288.0], [1765.0, 3395.0], [1769.0, 3350.0], [1789.0, 3299.0], [1781.0, 3343.0], [1777.0, 3354.0], [1729.0, 3618.0], [1733.0, 3554.0], [1737.0, 3574.0], [1741.0, 3538.0], [1757.0, 3417.0], [1753.0, 3462.0], [1749.0, 3481.0], [1745.0, 3533.0], [1773.0, 3368.0], [1849.0, 3056.0], [1853.0, 2986.0], [1825.0, 3177.0], [1829.0, 3145.0], [1833.0, 3126.0], [1845.0, 3052.0], [1841.0, 3035.0], [1805.0, 3263.0], [1801.0, 3252.0], [1797.0, 3259.0], [1793.0, 3206.0], [1821.0, 3184.0], [1817.0, 3185.0], [1813.0, 3202.0], [1809.0, 3222.0], [1837.0, 3004.0], [1869.0, 616.0], [1889.0, 428.875], [1917.0, 1370.5], [1857.0, 2959.0], [1861.0, 3014.0], [1865.0, 1475.5], [1905.0, 2693.0], [1909.0, 2701.0], [1885.0, 445.875], [1881.0, 1461.0], [1877.0, 1482.0], [1873.0, 2935.0], [1913.0, 1349.0], [1897.0, 978.0], [1901.0, 2706.0], [1893.0, 622.6], [1969.0, 179.75], [1977.0, 176.0], [1953.0, 141.45454545454547], [1957.0, 226.0], [1961.0, 525.0], [1933.0, 2478.0], [1929.0, 915.3333333333334], [1925.0, 339.3636363636364], [1921.0, 1336.5], [1949.0, 197.0], [1945.0, 391.375], [1941.0, 671.75], [1937.0, 1281.5], [1965.0, 79.0], [2025.0, 299.0], [2029.0, 300.0], [2017.0, 302.0], [2009.0, 506.66666666666663], [2001.0, 508.5], [1993.0, 510.0], [1989.0, 510.0], [2162.0, 361.0], [2170.0, 410.0], [2130.0, 320.0], [2114.0, 404.5], [2146.0, 289.0], [2050.0, 291.0], [2106.0, 291.0], [2098.0, 288.0], [2090.0, 287.0], [2138.0, 297.5], [2298.0, 491.0], [2242.0, 279.0], [2250.0, 282.0], [2258.0, 277.0], [2266.0, 463.5], [2274.0, 418.0], [2186.0, 399.0], [2178.0, 402.0], [2202.0, 364.5], [2234.0, 336.3333333333333], [2226.0, 364.0], [2210.0, 416.0], [2410.0, 391.6666666666667], [2418.0, 538.0], [2370.0, 429.0], [2378.0, 390.0], [2386.0, 339.0], [2402.0, 385.0], [2330.0, 484.0], [2322.0, 385.5], [2314.0, 489.3333333333333], [2450.0, 282.0], [2458.0, 413.0], [2442.0, 283.0], [2434.0, 415.0], [2466.0, 380.0], [2682.0, 366.0], [2586.0, 557.0], [2610.0, 385.5], [2650.0, 366.0], [2642.0, 267.0], [2802.0, 385.0], [2754.0, 396.6666666666667], [2762.0, 456.5], [2770.0, 361.5], [2778.0, 435.0], [2690.0, 455.0], [2698.0, 290.0], [2714.0, 447.0], [2746.0, 458.5], [2722.0, 445.0], [2914.0, 166.0], [3058.0, 380.0], [3042.0, 340.0], [2970.0, 509.8], [3050.0, 287.0], [3066.0, 365.5], [3018.0, 268.3333333333333], [3026.0, 281.0], [3034.0, 387.6666666666667], [3010.0, 344.2], [2962.0, 486.0], [2954.0, 401.0], [2978.0, 521.0], [2994.0, 383.5], [3002.0, 471.0], [3098.0, 499.0], [3082.0, 361.5], [3114.0, 267.3333333333333], [3122.0, 496.0], [3074.0, 428.25], [3090.0, 332.1428571428571], [3170.0, 442.0], [3186.0, 447.75], [3138.0, 450.0], [3146.0, 472.0], [3154.0, 427.0], [3162.0, 487.0], [3106.0, 351.1666666666667], [3226.0, 541.0], [3306.0, 458.0], [3298.0, 410.0], [3322.0, 379.0], [3274.0, 386.5], [3314.0, 456.0], [3210.0, 412.0], [3202.0, 476.03703703703707], [3258.0, 481.5], [3250.0, 547.0], [3242.0, 529.3333333333334], [3234.0, 514.0], [2067.0, 108.4], [2171.0, 406.0], [2059.0, 285.0], [2099.0, 543.0], [2091.0, 287.0], [2115.0, 354.3333333333333], [2131.0, 353.3333333333333], [2123.0, 317.0], [2163.0, 360.5], [2155.0, 300.5], [2139.0, 299.0], [2275.0, 413.0], [2251.0, 282.0], [2267.0, 418.0], [2291.0, 380.0], [2179.0, 301.0], [2187.0, 400.0], [2195.0, 296.0], [2235.0, 281.0], [2227.0, 310.0], [2219.0, 423.0], [2419.0, 558.0], [2371.0, 302.0], [2387.0, 290.5], [2395.0, 324.0], [2411.0, 387.0], [2403.0, 383.0], [2315.0, 541.0], [2323.0, 386.0], [2331.0, 381.0], [2451.0, 281.0], [2475.0, 277.0], [2459.0, 380.0], [2435.0, 349.5], [2683.0, 361.5], [2635.0, 394.0], [2587.0, 557.0], [2611.0, 380.0], [2603.0, 458.3333333333333], [2595.0, 432.6666666666667], [2651.0, 366.0], [2643.0, 267.0], [2795.0, 334.5], [2755.0, 369.0], [2763.0, 458.0], [2771.0, 456.0], [2779.0, 436.5], [2787.0, 449.0], [2691.0, 454.3333333333333], [2707.0, 386.0], [2715.0, 447.0], [2747.0, 453.0], [2931.0, 167.0], [2915.0, 161.66666666666666], [3067.0, 310.5], [3051.0, 368.0], [3043.0, 447.0], [3059.0, 338.3333333333333], [3011.0, 440.6666666666667], [3019.0, 357.2], [3027.0, 407.75], [3035.0, 325.5], [2963.0, 486.0], [2971.0, 452.0], [2955.0, 422.75], [2947.0, 169.0], [2987.0, 299.5], [2979.0, 503.0], [3003.0, 358.5], [2995.0, 384.0], [3091.0, 340.6666666666667], [3131.0, 477.0], [3075.0, 262.6666666666667], [3083.0, 258.25], [3171.0, 471.0], [3187.0, 447.0], [3195.0, 497.3333333333333], [3139.0, 458.0], [3155.0, 509.0], [3163.0, 506.0], [3115.0, 451.0], [3123.0, 516.0], [3107.0, 361.0], [3315.0, 455.0], [3283.0, 401.6666666666667], [3299.0, 392.0], [3219.0, 430.3333333333333], [3259.0, 435.0], [3251.0, 413.0], [541.0, 8790.0], [543.0, 8770.0], [539.0, 8806.0], [537.0, 8839.0], [535.0, 8891.0], [533.0, 8853.0], [531.0, 8872.0], [529.0, 8874.0], [527.0, 8892.0], [515.0, 8949.0], [513.0, 8967.0], [519.0, 8935.0], [517.0, 8938.0], [525.0, 8894.0], [523.0, 8915.0], [521.0, 8925.0], [573.0, 8728.0], [575.0, 8714.0], [571.0, 8749.0], [569.0, 8686.0], [567.0, 8710.0], [565.0, 8710.0], [563.0, 8719.0], [561.0, 8726.0], [559.0, 8737.0], [547.0, 8765.0], [545.0, 8772.0], [551.0, 8748.0], [549.0, 8754.0], [557.0, 8725.0], [555.0, 8733.0], [553.0, 8740.0], [605.0, 8450.0], [607.0, 8423.0], [603.0, 8474.0], [601.0, 8497.0], [599.0, 8528.0], [597.0, 8517.0], [595.0, 8526.0], [593.0, 8559.0], [591.0, 8551.0], [579.0, 8647.0], [577.0, 8662.0], [583.0, 8631.0], [581.0, 8573.0], [589.0, 8558.0], [587.0, 8611.0], [585.0, 8619.0], [637.0, 8263.0], [639.0, 8251.0], [635.0, 8260.0], [633.0, 8268.0], [631.0, 8262.0], [629.0, 8274.0], [627.0, 8281.0], [625.0, 8291.0], [623.0, 8297.0], [611.0, 8363.0], [609.0, 8416.0], [615.0, 8357.0], [613.0, 8375.0], [621.0, 8359.0], [619.0, 8312.0], [617.0, 8346.0], [669.0, 8080.0], [671.0, 8077.0], [667.0, 8090.0], [665.0, 8108.0], [663.0, 8109.0], [661.0, 8083.0], [659.0, 8121.0], [657.0, 8136.0], [655.0, 8141.0], [643.0, 8190.0], [641.0, 8215.0], [647.0, 8174.0], [645.0, 8189.0], [653.0, 8160.0], [651.0, 8171.0], [649.0, 8176.0], [701.0, 7936.0], [703.0, 7919.0], [699.0, 7917.0], [697.0, 7924.0], [695.0, 7966.0], [693.0, 7975.0], [691.0, 7973.0], [689.0, 7980.0], [687.0, 8015.0], [675.0, 8031.0], [673.0, 8038.0], [679.0, 8052.0], [677.0, 8062.0], [685.0, 8024.0], [683.0, 8037.0], [681.0, 8039.0], [733.0, 7736.0], [735.0, 7735.0], [731.0, 7750.0], [729.0, 7769.0], [727.0, 7775.0], [725.0, 7791.0], [723.0, 7798.0], [721.0, 7804.0], [719.0, 7814.0], [707.0, 7902.0], [705.0, 7908.0], [711.0, 7882.0], [709.0, 7894.0], [717.0, 7821.0], [715.0, 7865.0], [713.0, 7869.0], [765.0, 7582.0], [767.0, 7566.0], [763.0, 7593.0], [761.0, 7610.0], [759.0, 7622.0], [757.0, 7617.0], [755.0, 7633.0], [753.0, 7637.0], [751.0, 7650.0], [739.0, 7718.0], [737.0, 7723.0], [743.0, 7696.0], [741.0, 7707.0], [749.0, 7670.0], [747.0, 7680.0], [745.0, 7665.0], [797.0, 6541.0], [799.0, 6545.0], [795.0, 7361.0], [793.0, 6550.0], [791.0, 6563.0], [789.0, 6569.0], [787.0, 6278.0], [785.0, 6312.0], [783.0, 6280.0], [771.0, 7529.0], [769.0, 7548.0], [775.0, 7460.0], [773.0, 7474.0], [781.0, 6283.0], [779.0, 6295.0], [777.0, 7446.0], [829.0, 6466.0], [831.0, 6466.0], [827.0, 7257.0], [825.0, 6497.0], [823.0, 6502.0], [821.0, 6501.0], [819.0, 6499.0], [817.0, 6506.0], [815.0, 7291.0], [801.0, 6542.0], [807.0, 6531.0], [803.0, 6544.0], [813.0, 7299.0], [811.0, 6524.0], [809.0, 6525.0], [861.0, 6381.0], [863.0, 6380.0], [859.0, 7103.0], [857.0, 6408.0], [855.0, 7157.0], [853.0, 6414.0], [851.0, 6417.0], [849.0, 6421.0], [847.0, 6431.0], [835.0, 6444.0], [833.0, 6462.0], [839.0, 7215.0], [837.0, 6439.0], [845.0, 7190.0], [843.0, 6437.0], [841.0, 6474.0], [893.0, 6440.0], [895.0, 6486.0], [891.0, 6474.0], [889.0, 7001.0], [887.0, 7011.0], [885.0, 7023.0], [883.0, 7030.0], [881.0, 7039.0], [879.0, 6452.0], [867.0, 7092.0], [865.0, 6370.0], [871.0, 7084.0], [869.0, 7092.0], [877.0, 7056.0], [875.0, 7065.0], [873.0, 7074.0], [925.0, 6332.0], [927.0, 6327.0], [923.0, 6339.0], [921.0, 6360.0], [919.0, 6869.0], [917.0, 6908.0], [915.0, 6923.0], [913.0, 6929.0], [911.0, 6933.0], [899.0, 6422.0], [897.0, 6436.0], [903.0, 6445.0], [901.0, 6466.0], [909.0, 6918.0], [907.0, 6926.0], [905.0, 6942.0], [957.0, 6219.0], [959.0, 6200.0], [955.0, 6725.0], [953.0, 6736.0], [951.0, 6245.0], [949.0, 6250.0], [947.0, 6258.0], [945.0, 6767.0], [943.0, 6771.0], [931.0, 6800.0], [929.0, 6300.0], [935.0, 6795.0], [933.0, 6810.0], [941.0, 6778.0], [939.0, 6290.0], [937.0, 6801.0], [989.0, 6077.0], [991.0, 6069.0], [987.0, 6562.0], [985.0, 6081.0], [983.0, 6086.0], [981.0, 6100.0], [979.0, 6128.0], [977.0, 6651.0], [975.0, 6157.0], [963.0, 6182.0], [961.0, 6193.0], [967.0, 6681.0], [965.0, 6690.0], [973.0, 6162.0], [971.0, 6672.0], [969.0, 6177.0], [1021.0, 6020.0], [1023.0, 5976.0], [1019.0, 6015.0], [1017.0, 6022.0], [1015.0, 6001.0], [1013.0, 6476.0], [1011.0, 6010.0], [1009.0, 6016.0], [1007.0, 6507.0], [995.0, 6544.0], [993.0, 6060.0], [999.0, 6532.0], [997.0, 6540.0], [1005.0, 6180.0], [1003.0, 6517.0], [1001.0, 6169.0], [1082.0, 5838.0], [1086.0, 5837.0], [1078.0, 5789.0], [1074.0, 5867.0], [1070.0, 5865.0], [1066.0, 6246.0], [1062.0, 5910.0], [1058.0, 5828.0], [1054.0, 6287.0], [1030.0, 5944.0], [1026.0, 5975.0], [1038.0, 6060.0], [1034.0, 6068.0], [1050.0, 5872.0], [1046.0, 6320.0], [1042.0, 5985.0], [1146.0, 5639.0], [1150.0, 5742.0], [1138.0, 5755.0], [1102.0, 5819.0], [1098.0, 5823.0], [1094.0, 5849.0], [1090.0, 5829.0], [1134.0, 5807.0], [1130.0, 5781.0], [1126.0, 5792.0], [1122.0, 6075.0], [1118.0, 6084.0], [1114.0, 5789.0], [1110.0, 6108.0], [1106.0, 6116.0], [1210.0, 5396.0], [1214.0, 5369.0], [1206.0, 5750.0], [1202.0, 5765.0], [1198.0, 5767.0], [1194.0, 5799.0], [1190.0, 5483.0], [1186.0, 5802.0], [1182.0, 5512.0], [1158.0, 5933.0], [1154.0, 5684.0], [1166.0, 5869.0], [1162.0, 5769.0], [1178.0, 5836.0], [1174.0, 5592.0], [1170.0, 5610.0], [1274.0, 5122.0], [1278.0, 5702.0], [1250.0, 5798.0], [1254.0, 5180.0], [1258.0, 5513.0], [1270.0, 5124.0], [1266.0, 5137.0], [1246.0, 5108.0], [1218.0, 5350.0], [1222.0, 5320.0], [1226.0, 5305.0], [1230.0, 5872.0], [1242.0, 5120.0], [1238.0, 5607.0], [1234.0, 5287.0], [1262.0, 5156.0], [1338.0, 4912.0], [1342.0, 4903.0], [1314.0, 5047.0], [1318.0, 5244.0], [1334.0, 5454.0], [1330.0, 5474.0], [1310.0, 5585.0], [1282.0, 5693.0], [1286.0, 5601.0], [1290.0, 5637.0], [1294.0, 5080.0], [1306.0, 5600.0], [1302.0, 5063.0], [1298.0, 5070.0], [1322.0, 5017.0], [1402.0, 4623.0], [1406.0, 5140.0], [1378.0, 5269.0], [1382.0, 5102.0], [1386.0, 5206.0], [1398.0, 5169.0], [1394.0, 5116.0], [1374.0, 5280.0], [1346.0, 4865.0], [1350.0, 5356.0], [1354.0, 5335.0], [1358.0, 5310.0], [1370.0, 5093.0], [1366.0, 4821.0], [1362.0, 5257.0], [1390.0, 4638.0], [1466.0, 4372.0], [1470.0, 4751.0], [1442.0, 4466.0], [1446.0, 4443.0], [1450.0, 4425.0], [1462.0, 4378.0], [1458.0, 4393.0], [1438.0, 4896.0], [1410.0, 4621.0], [1414.0, 4612.0], [1418.0, 4562.0], [1422.0, 5025.0], [1434.0, 4506.0], [1430.0, 4538.0], [1426.0, 5011.0], [1454.0, 4417.0], [1522.0, 4503.0], [1530.0, 4564.0], [1506.0, 4602.0], [1510.0, 4207.0], [1514.0, 4674.0], [1526.0, 4533.0], [1486.0, 4283.0], [1482.0, 4319.0], [1478.0, 4327.0], [1474.0, 4323.0], [1502.0, 4230.0], [1498.0, 4634.0], [1494.0, 4258.0], [1490.0, 4625.0], [1518.0, 4186.0], [1538.0, 4129.0], [1586.0, 2570.5], [1566.0, 4005.0], [1542.0, 4501.0], [1546.0, 4062.0], [1550.0, 4407.0], [1562.0, 4023.0], [1558.0, 4374.0], [1554.0, 4399.0], [1582.0, 785.0], [1598.0, 3910.0], [1570.0, 3988.0], [1574.0, 3998.0], [1578.0, 4400.0], [1594.0, 4347.0], [1590.0, 4361.0], [1650.0, 4050.0], [1614.0, 1408.6666666666667], [1610.0, 3833.0], [1606.0, 4243.0], [1602.0, 3853.0], [1654.0, 4041.0], [1634.0, 1259.3333333333333], [1638.0, 4095.0], [1642.0, 3764.0], [1646.0, 4100.0], [1630.0, 1264.3333333333333], [1626.0, 3772.0], [1622.0, 4138.0], [1618.0, 4199.0], [1662.0, 3688.0], [1658.0, 3692.0], [1694.0, 3593.0], [1690.0, 1932.0], [1686.0, 3858.0], [1682.0, 3604.0], [1666.0, 3629.0], [1670.0, 3622.0], [1674.0, 3620.0], [1678.0, 3606.0], [1726.0, 3658.0], [1698.0, 3766.0], [1702.0, 3744.0], [1706.0, 3746.0], [1710.0, 3701.0], [1722.0, 3633.0], [1718.0, 3619.0], [1714.0, 3712.0], [1778.0, 3288.0], [1790.0, 3290.0], [1762.0, 3416.0], [1766.0, 3418.0], [1770.0, 3384.0], [1786.0, 3337.0], [1742.0, 3517.0], [1738.0, 3556.5], [1734.0, 3598.0], [1730.0, 3608.0], [1758.0, 3445.0], [1754.0, 3466.0], [1750.0, 3515.0], [1746.0, 3536.0], [1774.0, 3380.0], [1850.0, 3045.0], [1854.0, 3035.0], [1826.0, 3048.0], [1830.0, 3159.0], [1834.0, 3010.0], [1846.0, 3068.0], [1842.0, 3081.0], [1822.0, 3102.0], [1794.0, 3275.0], [1798.0, 3174.0], [1802.0, 3244.0], [1806.0, 3231.0], [1818.0, 3078.0], [1814.0, 3132.0], [1810.0, 3162.0], [1838.0, 3069.0], [1870.0, 1006.3333333333334], [1918.0, 1329.5], [1890.0, 635.4], [1862.0, 2993.0], [1858.0, 3027.0], [1866.0, 1015.6666666666666], [1914.0, 2608.0], [1910.0, 2665.0], [1906.0, 2674.0], [1886.0, 1011.3333333333334], [1882.0, 1481.0], [1878.0, 1477.0], [1874.0, 449.71428571428567], [1902.0, 2700.0], [1894.0, 444.75], [1934.0, 708.5], [1974.0, 230.66666666666666], [1958.0, 224.66666666666666], [1978.0, 43.0], [1954.0, 254.22222222222223], [1962.0, 221.66666666666666], [1930.0, 2516.0], [1926.0, 932.6666666666666], [1922.0, 1331.5], [1950.0, 194.85714285714286], [1946.0, 634.75], [1938.0, 2395.0], [1942.0, 879.6666666666666], [1966.0, 80.0], [2042.0, 292.0], [2034.0, 298.0], [2030.0, 300.0], [2022.0, 301.0], [2010.0, 1894.0], [1990.0, 514.0], [1994.0, 511.0], [2006.0, 506.0], [2002.0, 506.0], [2068.0, 53.0], [2100.0, 256.2], [2084.0, 290.0], [2108.0, 304.5], [2124.0, 357.6666666666667], [2132.0, 420.0], [2140.0, 299.0], [2164.0, 409.0], [2148.0, 287.0], [2292.0, 264.0], [2244.0, 278.0], [2300.0, 424.0], [2252.0, 287.0], [2260.0, 277.0], [2284.0, 335.0], [2276.0, 414.0], [2236.0, 281.0], [2196.0, 295.0], [2180.0, 300.0], [2212.0, 357.0], [2404.0, 382.0], [2380.0, 337.5], [2396.0, 389.5], [2420.0, 381.5], [2332.0, 382.0], [2324.0, 386.0], [2316.0, 541.0], [2364.0, 414.0], [2340.0, 562.0], [2452.0, 281.0], [2476.0, 277.0], [2548.0, 271.0], [2460.0, 280.0], [2444.0, 479.0], [2436.0, 314.0], [2468.0, 329.0], [2588.0, 557.0], [2684.0, 310.5], [2572.0, 369.0], [2612.0, 294.0], [2604.0, 397.0], [2596.0, 298.3333333333333], [2652.0, 365.0], [2644.0, 265.0], [2788.0, 443.5], [2804.0, 434.0], [2756.0, 365.0], [2764.0, 458.0], [2772.0, 454.0], [2692.0, 453.0], [2700.0, 285.0], [2708.0, 338.0], [2716.0, 446.0], [2748.0, 452.0], [2724.0, 453.5], [2780.0, 439.3333333333333], [2932.0, 164.0], [2916.0, 164.0], [3060.0, 338.0], [2956.0, 243.5], [3044.0, 290.0], [3052.0, 321.2857142857143], [3068.0, 329.0], [3012.0, 397.0], [3020.0, 313.5], [3028.0, 289.0], [3036.0, 357.3333333333333], [2964.0, 486.0], [2948.0, 171.0], [2988.0, 445.0], [2980.0, 474.0], [3004.0, 253.0], [2996.0, 488.0], [3100.0, 506.0], [3172.0, 499.0], [3084.0, 417.5], [3124.0, 520.5], [3076.0, 356.0], [3092.0, 325.0], [3180.0, 527.0], [3188.0, 459.0], [3148.0, 457.0], [3156.0, 506.6], [3164.0, 505.5], [3196.0, 548.0], [3108.0, 347.0], [3308.0, 389.0], [3316.0, 455.0], [3268.0, 421.0], [3292.0, 392.3333333333333], [3300.0, 421.0], [3228.0, 515.0], [3212.0, 429.6666666666667], [3204.0, 507.3333333333333], [3252.0, 546.0], [3236.0, 513.0], [2061.0, 285.0], [2069.0, 434.0], [2101.0, 345.6666666666667], [2093.0, 287.0], [2085.0, 288.0], [2109.0, 291.0], [2053.0, 291.0], [2117.0, 317.0], [2149.0, 288.6666666666667], [2133.0, 421.0], [2277.0, 413.0], [2245.0, 305.0], [2269.0, 417.0], [2293.0, 275.0], [2189.0, 400.0], [2205.0, 411.0], [2237.0, 281.0], [2181.0, 298.0], [2229.0, 309.0], [2421.0, 491.0], [2373.0, 359.3333333333333], [2381.0, 441.5], [2389.0, 290.5], [2397.0, 355.5], [2413.0, 373.0], [2405.0, 384.0], [2317.0, 490.3333333333333], [2325.0, 539.0], [2365.0, 428.0], [2453.0, 281.0], [2549.0, 371.0], [2477.0, 277.0], [2469.0, 278.0], [2461.0, 280.0], [2445.0, 282.0], [2437.0, 313.0], [2685.0, 270.0], [2637.0, 365.0], [2589.0, 557.0], [2605.0, 295.0], [2597.0, 483.6666666666667], [2653.0, 366.0], [2645.0, 265.0], [2797.0, 385.0], [2757.0, 363.0], [2765.0, 449.6666666666667], [2773.0, 360.0], [2789.0, 456.0], [2693.0, 392.5], [2701.0, 284.5], [2709.0, 310.0], [2717.0, 446.0], [2749.0, 438.0], [2781.0, 450.0], [2941.0, 165.0], [2917.0, 161.0], [3069.0, 242.66666666666666], [3053.0, 346.3333333333333], [3045.0, 414.6666666666667], [3061.0, 372.0], [3013.0, 238.4], [3021.0, 262.125], [3029.0, 303.8], [3037.0, 284.58333333333337], [2965.0, 485.0], [2973.0, 515.0], [2957.0, 162.0], [2981.0, 511.0], [2989.0, 475.0], [2997.0, 473.0], [3005.0, 473.0], [2949.0, 164.0], [3093.0, 339.6666666666667], [3133.0, 457.3333333333333], [3077.0, 488.0], [3085.0, 246.0], [3181.0, 565.5], [3189.0, 438.0], [3197.0, 548.0], [3141.0, 491.0], [3149.0, 461.5], [3165.0, 510.0], [3101.0, 410.7142857142857], [3117.0, 457.5], [3125.0, 515.0], [3109.0, 364.0], [3301.0, 398.0], [3309.0, 382.0], [3325.0, 380.6666666666667], [3269.0, 451.5], [3277.0, 382.0], [3293.0, 398.0], [3229.0, 515.5], [3221.0, 410.0], [3213.0, 563.0], [3205.0, 543.0], [3261.0, 424.5], [3253.0, 413.5], [3237.0, 520.3333333333334], [1083.0, 5984.0], [1087.0, 6177.0], [1079.0, 5753.0], [1075.0, 6212.0], [1071.0, 5877.0], [1067.0, 5892.0], [1063.0, 6252.0], [1059.0, 6270.0], [1055.0, 6284.0], [1031.0, 6413.0], [1027.0, 6424.0], [1039.0, 6357.0], [1035.0, 6069.0], [1051.0, 6300.0], [1047.0, 5883.0], [1043.0, 6332.0], [1147.0, 5755.0], [1151.0, 5974.0], [1143.0, 5892.0], [1139.0, 6028.0], [1135.0, 6037.0], [1131.0, 6048.0], [1127.0, 6063.0], [1123.0, 6071.0], [1119.0, 5780.0], [1095.0, 5833.0], [1091.0, 6165.0], [1103.0, 6122.0], [1099.0, 6133.0], [1115.0, 6085.0], [1111.0, 6107.0], [1107.0, 5804.0], [1211.0, 5726.0], [1215.0, 5704.0], [1207.0, 5745.0], [1203.0, 5764.0], [1199.0, 5764.0], [1195.0, 5789.0], [1191.0, 5795.0], [1187.0, 5796.0], [1183.0, 5814.0], [1159.0, 5659.0], [1155.0, 5962.0], [1167.0, 5619.0], [1163.0, 5598.0], [1179.0, 5825.0], [1175.0, 5842.0], [1171.0, 5857.0], [1275.0, 5645.0], [1279.0, 5108.0], [1251.0, 5091.0], [1255.0, 5176.0], [1259.0, 5164.0], [1271.0, 5127.0], [1267.0, 5134.0], [1247.0, 5201.0], [1219.0, 5689.0], [1223.0, 5927.0], [1227.0, 5879.0], [1231.0, 5294.0], [1243.0, 5216.0], [1239.0, 5268.0], [1235.0, 5855.0], [1263.0, 5529.0], [1339.0, 5359.0], [1343.0, 4899.0], [1319.0, 5432.0], [1315.0, 5306.0], [1323.0, 5419.0], [1335.0, 4932.0], [1331.0, 5466.0], [1311.0, 5564.0], [1283.0, 5094.0], [1287.0, 5132.0], [1291.0, 5096.0], [1295.0, 5646.0], [1307.0, 5044.0], [1303.0, 5058.0], [1299.0, 5633.0], [1327.0, 5205.0], [1403.0, 5151.0], [1407.0, 4643.0], [1379.0, 5264.0], [1383.0, 4731.0], [1387.0, 4651.0], [1399.0, 5166.0], [1395.0, 4649.0], [1375.0, 4728.0], [1347.0, 5389.0], [1351.0, 4817.0], [1355.0, 4803.0], [1359.0, 4795.0], [1371.0, 4739.0], [1367.0, 5108.0], [1363.0, 4819.0], [1391.0, 5123.0], [1467.0, 4368.0], [1471.0, 4353.0], [1443.0, 4875.0], [1447.0, 4434.0], [1451.0, 4424.0], [1463.0, 4783.0], [1459.0, 4381.0], [1439.0, 4474.0], [1411.0, 5058.0], [1415.0, 4573.0], [1419.0, 5024.0], [1423.0, 4582.0], [1435.0, 4970.0], [1431.0, 4545.0], [1427.0, 4561.0], [1455.0, 4922.0], [1531.0, 4142.0], [1535.0, 4349.5], [1507.0, 4219.0], [1511.0, 4597.0], [1515.0, 4198.0], [1527.0, 4151.0], [1523.0, 4173.0], [1503.0, 4615.0], [1475.0, 4728.0], [1479.0, 4331.0], [1483.0, 4720.0], [1487.0, 4674.0], [1499.0, 4245.0], [1495.0, 4254.0], [1491.0, 4265.0], [1519.0, 4646.0], [1539.0, 4590.0], [1583.0, 2198.5], [1587.0, 2020.5], [1567.0, 4431.0], [1543.0, 4066.0], [1547.0, 4515.0], [1551.0, 4060.0], [1563.0, 4380.0], [1559.0, 4052.0], [1555.0, 4055.0], [1599.0, 4306.0], [1571.0, 4300.0], [1575.0, 4284.0], [1579.0, 4397.0], [1595.0, 4340.0], [1591.0, 4276.0], [1659.0, 3691.0], [1635.0, 3758.0], [1639.0, 3748.0], [1643.0, 4073.0], [1647.0, 3727.0], [1631.0, 1887.5], [1627.0, 1891.0], [1623.0, 3786.0], [1619.0, 3806.0], [1663.0, 4031.0], [1655.0, 3710.0], [1651.0, 3722.0], [1615.0, 3809.0], [1611.0, 3823.0], [1607.0, 4241.0], [1603.0, 4237.0], [1723.0, 3673.0], [1727.0, 3610.0], [1699.0, 3561.0], [1703.0, 3535.0], [1707.0, 3688.0], [1719.0, 3646.0], [1715.0, 3654.0], [1695.0, 3804.0], [1667.0, 3951.0], [1675.0, 3887.0], [1679.0, 3877.0], [1691.0, 3811.0], [1687.0, 3594.0], [1683.0, 3870.0], [1711.0, 3479.0], [1787.0, 3304.0], [1791.0, 3277.0], [1763.0, 3433.0], [1767.0, 3360.0], [1771.0, 3355.0], [1783.0, 3351.0], [1779.0, 3366.0], [1759.0, 3381.0], [1731.0, 3598.0], [1735.0, 3545.0], [1739.0, 3559.0], [1743.0, 3544.0], [1755.0, 3490.0], [1751.0, 3508.0], [1747.0, 3527.0], [1775.0, 3394.0], [1843.0, 3057.0], [1855.0, 3042.0], [1827.0, 3156.0], [1831.0, 3138.0], [1835.0, 3009.0], [1847.0, 2937.0], [1807.0, 3171.0], [1803.0, 3272.0], [1799.0, 3254.0], [1795.0, 3194.0], [1823.0, 3191.0], [1819.0, 3192.0], [1815.0, 3191.0], [1811.0, 3214.0], [1839.0, 3075.0], [1867.0, 516.0], [1911.0, 1387.5], [1919.0, 1349.0], [1887.0, 495.7142857142857], [1859.0, 2892.0], [1863.0, 2988.0], [1871.0, 784.5], [1907.0, 2686.0], [1883.0, 550.1666666666666], [1879.0, 2903.0], [1875.0, 610.6], [1915.0, 1342.5], [1895.0, 430.125], [1899.0, 2738.5], [1903.0, 2697.0], [1891.0, 559.8333333333333], [1971.0, 298.16666666666663], [1935.0, 904.3333333333334], [1979.0, 515.8], [1955.0, 105.2], [1959.0, 70.0], [1963.0, 227.0], [1975.0, 301.5], [1931.0, 911.3333333333334], [1927.0, 1341.0], [1923.0, 1344.5], [1951.0, 101.375], [1947.0, 2195.0], [1943.0, 1231.0], [1939.0, 692.75], [1967.0, 404.5], [2031.0, 300.0], [2027.0, 300.0], [2019.0, 301.0], [1999.0, 508.6666666666667], [1995.0, 509.0], [2166.0, 326.75], [2174.0, 421.0], [2126.0, 321.5], [2118.0, 326.4], [2062.0, 285.0], [2054.0, 286.0], [2110.0, 318.0], [2102.0, 491.5], [2142.0, 298.0], [2134.0, 369.0], [2206.0, 352.0], [2294.0, 269.0], [2262.0, 523.0], [2286.0, 511.5], [2190.0, 399.5], [2230.0, 309.0], [2222.0, 311.0], [2214.0, 363.0], [2422.0, 491.0], [2374.0, 342.5], [2382.0, 310.5], [2390.0, 334.5], [2398.0, 289.0], [2414.0, 560.0], [2406.0, 289.0], [2334.0, 382.0], [2326.0, 386.0], [2318.0, 286.0], [2366.0, 406.0], [2342.0, 549.0], [2462.0, 380.0], [2454.0, 281.0], [2446.0, 282.0], [2438.0, 551.0], [2478.0, 488.0], [2470.0, 329.0], [2638.0, 351.3333333333333], [2646.0, 315.0], [2686.0, 270.0], [2622.0, 462.0], [2614.0, 379.0], [2606.0, 465.0], [2598.0, 297.0], [2654.0, 449.0], [2790.0, 430.0], [2798.0, 425.2], [2758.0, 457.0], [2766.0, 453.0], [2774.0, 447.0], [2750.0, 410.0], [2694.0, 392.0], [2702.0, 284.0], [2710.0, 421.3333333333333], [2718.0, 446.0], [2726.0, 414.5], [2782.0, 432.3333333333333], [2918.0, 162.0], [3070.0, 289.4], [3054.0, 376.0], [3014.0, 377.66666666666663], [2974.0, 512.0], [3046.0, 362.0], [3062.0, 290.75], [3022.0, 355.25], [3030.0, 368.25], [3038.0, 369.5], [2958.0, 324.1666666666667], [2966.0, 484.0], [2990.0, 483.0], [2982.0, 511.0], [3006.0, 294.0], [2998.0, 487.0], [3086.0, 374.0], [3094.0, 343.0], [3118.0, 451.0], [3134.0, 502.0], [3126.0, 515.0], [3078.0, 336.33333333333337], [3102.0, 295.1111111111111], [3174.0, 510.40000000000003], [3182.0, 534.0], [3190.0, 419.0], [3142.0, 507.0], [3150.0, 508.0], [3158.0, 507.0], [3318.0, 455.0], [3270.0, 411.0], [3286.0, 387.0], [3326.0, 436.0], [3310.0, 456.0], [3222.0, 429.0], [3214.0, 438.0], [3206.0, 465.5], [2063.0, 292.0], [2055.0, 286.0], [2071.0, 384.0], [2111.0, 300.0], [2103.0, 439.0], [2095.0, 286.3333333333333], [2087.0, 289.0], [2175.0, 336.3333333333333], [2159.0, 420.0], [2151.0, 288.0], [2143.0, 296.0], [2279.0, 414.0], [2247.0, 287.0], [2255.0, 282.6666666666667], [2263.0, 523.0], [2271.0, 417.0], [2287.0, 332.0], [2239.0, 292.5], [2183.0, 298.5], [2199.0, 293.0], [2231.0, 421.0], [2223.0, 368.5], [2215.0, 429.0], [2415.0, 538.0], [2383.0, 386.0], [2423.0, 399.0], [2375.0, 392.5], [2391.0, 407.0], [2399.0, 424.0], [2367.0, 340.5], [2327.0, 386.0], [2335.0, 391.0], [2343.0, 539.0], [2479.0, 277.0], [2471.0, 277.0], [2463.0, 281.0], [2455.0, 281.0], [2447.0, 282.0], [2687.0, 317.5], [2631.0, 395.0], [2639.0, 269.0], [2647.0, 365.0], [2591.0, 537.6666666666666], [2615.0, 464.0], [2607.0, 385.0], [2599.0, 398.0], [2799.0, 458.0], [2775.0, 454.0], [2791.0, 430.0], [2751.0, 365.0], [2695.0, 393.0], [2711.0, 421.0], [2719.0, 445.0], [2783.0, 433.0], [2935.0, 167.6], [2943.0, 165.5], [2919.0, 154.0], [3063.0, 300.3333333333333], [3055.0, 281.3333333333333], [2959.0, 242.5], [3047.0, 350.8], [3071.0, 246.66666666666666], [3015.0, 253.0], [3031.0, 437.14285714285717], [3039.0, 287.0], [2967.0, 163.66666666666666], [2975.0, 513.0], [2951.0, 164.0], [2999.0, 466.0], [2991.0, 442.0], [3007.0, 317.3333333333333], [3183.0, 499.1847826086957], [3103.0, 395.75], [3175.0, 531.0], [3135.0, 475.0], [3079.0, 227.5], [3087.0, 245.5], [3191.0, 438.0], [3143.0, 473.0], [3151.0, 473.0], [3159.0, 475.5], [3167.0, 471.0], [3095.0, 539.0], [3119.0, 481.0], [3111.0, 386.75], [3303.0, 399.0], [3327.0, 376.0], [3271.0, 411.0], [3279.0, 381.0], [3295.0, 422.0], [3223.0, 464.5], [3215.0, 440.0], [3207.0, 564.0], [3263.0, 447.5], [3255.0, 412.5], [3239.0, 534.0], [1.0, 11519.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[1827.7112500000026, 3484.4529999999995]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3329.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3771.9333333333334, "minX": 1.66603992E12, "maxY": 1655382.0833333333, "series": [{"data": [[1.66603992E12, 1655382.0833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66603992E12, 3771.9333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66603992E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3484.4529999999995, "minX": 1.66603992E12, "maxY": 3484.4529999999995, "series": [{"data": [[1.66603992E12, 3484.4529999999995]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66603992E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3307.8449999999957, "minX": 1.66603992E12, "maxY": 3307.8449999999957, "series": [{"data": [[1.66603992E12, 3307.8449999999957]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66603992E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 20.724500000000027, "minX": 1.66603992E12, "maxY": 20.724500000000027, "series": [{"data": [[1.66603992E12, 20.724500000000027]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66603992E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 845.0, "minX": 1.66603992E12, "maxY": 11519.0, "series": [{"data": [[1.66603992E12, 11519.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66603992E12, 10612.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66603992E12, 11414.44]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66603992E12, 11134.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66603992E12, 845.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66603992E12, 6295.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66603992E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 28.0, "maxY": 11223.0, "series": [{"data": [[134.0, 2658.0], [128.0, 11223.0], [148.0, 8852.0], [164.0, 7974.0], [163.0, 10573.0], [170.0, 9818.0], [207.0, 3364.0], [221.0, 4235.0], [223.0, 6542.0], [227.0, 5116.0], [224.0, 5891.0], [28.0, 845.0], [1963.0, 1885.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 514.0], [28.0, 41.0], [1963.0, 375.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1963.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 28.0, "maxY": 11223.0, "series": [{"data": [[134.0, 2658.0], [128.0, 11223.0], [148.0, 8851.0], [164.0, 7974.0], [163.0, 10573.0], [170.0, 9817.5], [207.0, 3364.0], [221.0, 4234.0], [223.0, 6542.0], [227.0, 5114.0], [224.0, 5890.5], [28.0, 842.0], [1963.0, 1885.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 0.0], [28.0, 0.0], [1963.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1963.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.66603992E12, "maxY": 66.66666666666667, "series": [{"data": [[1.66603992E12, 66.66666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66603992E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 32.516666666666666, "minX": 1.66603992E12, "maxY": 34.15, "series": [{"data": [[1.66603992E12, 32.516666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.66603992E12, 34.15]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66603992E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 32.516666666666666, "minX": 1.66603992E12, "maxY": 34.15, "series": [{"data": [[1.66603992E12, 34.15]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.66603992E12, 32.516666666666666]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66603992E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 32.516666666666666, "minX": 1.66603992E12, "maxY": 34.15, "series": [{"data": [[1.66603992E12, 32.516666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.66603992E12, 34.15]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66603992E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

